<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hou++</title>
  <subtitle>Hou Shengtao&#39;s blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://ShengtaoHou.github.io/"/>
  <updated>2017-01-26T15:19:35.606Z</updated>
  <id>http://ShengtaoHou.github.io/</id>
  
  <author>
    <name>侯胜滔</name>
    <email>vincenthou929@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JSP</title>
    <link href="http://ShengtaoHou.github.io/2017/01/26/JSP/"/>
    <id>http://ShengtaoHou.github.io/2017/01/26/JSP/</id>
    <published>2017-01-26T14:35:26.000Z</published>
    <updated>2017-01-26T15:19:35.606Z</updated>
    
    <content type="html">&lt;h2 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h2&gt;&lt;h3 id=&quot;中文编码：&quot;&gt;&lt;a href=&quot;#中文编码：&quot; class=&quot;headerlink&quot; title=&quot;中文编码：&quot;&gt;&lt;/a&gt;中文编码：&lt;/h3&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%@&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;language&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;java&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;contentType&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;pageEncoding&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;%&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;JSP声明：&quot;&gt;&lt;a href=&quot;#JSP声明：&quot; class=&quot;headerlink&quot; title=&quot;JSP声明：&quot;&gt;&lt;/a&gt;JSP声明：&lt;/h3&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%!&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;a&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;b&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;c&lt;/span&gt;; %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;JSP表达式：&quot;&gt;&lt;a href=&quot;#JSP表达式：&quot; class=&quot;headerlink&quot; title=&quot;JSP表达式：&quot;&gt;&lt;/a&gt;JSP表达式：&lt;/h3&gt;&lt;p&gt;一个JSP表达式中包含的脚本语言表达式，先被转化成String，然后插入到表达式出现的地方。&lt;br&gt;由于表达式的值会被转化成String，所以您可以在一个文本行中使用表达式而不用去管它是否是HTML标签。&lt;br&gt;表达式元素中可以包含任何符合Java语言规范的表达式，但是不能使用分号来结束表达式。&lt;br&gt;JSP表达式的语法格式：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%=&lt;/span&gt; 表达式 %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;JSP注释：&quot;&gt;&lt;a href=&quot;#JSP注释：&quot; class=&quot;headerlink&quot; title=&quot;JSP注释：&quot;&gt;&lt;/a&gt;JSP注释：&lt;/h3&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%--&lt;/span&gt; 注释&lt;span class=&quot;attr&quot;&gt;--&lt;/span&gt;%&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;控制流语句：&quot;&gt;&lt;a href=&quot;#控制流语句：&quot; class=&quot;headerlink&quot; title=&quot;控制流语句：&quot;&gt;&lt;/a&gt;控制流语句：&lt;/h3&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%@&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;language&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;java&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;contentType&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;pageEncoding&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;%&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%!&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;day&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;3;&lt;/span&gt; %&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;菜鸟教程(runoob.com)&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;IF...ELSE 实例&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;attr&quot;&gt;day&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;1&lt;/span&gt; | &lt;span class=&quot;attr&quot;&gt;day&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;7)&lt;/span&gt; &amp;#123; %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;今天是周末&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%&lt;/span&gt; &amp;#125; &lt;span class=&quot;attr&quot;&gt;else&lt;/span&gt; &amp;#123; %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;今天不是周末&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%&lt;/span&gt; &amp;#125; %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pageEncoding=&quot;UTF-8&quot;%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%! int fontSize; %&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;title&amp;gt;菜鸟教程(runoob.com)&amp;lt;/title&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;h3&amp;gt;For 循环实例&amp;lt;/h3&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%for ( fontSize = 1; fontSize &amp;lt;= 3; fontSize++)&amp;#123; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;font color=&quot;green&quot; size=&quot;&amp;lt;%= fontSize %&amp;gt;&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    菜鸟教程&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;lt;/font&amp;gt;&amp;lt;br /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%&amp;#125;%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/body&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;JSP指令：&quot;&gt;&lt;a href=&quot;#JSP指令：&quot; class=&quot;headerlink&quot; title=&quot;JSP指令：&quot;&gt;&lt;/a&gt;JSP指令：&lt;/h2&gt;&lt;h3 id=&quot;Page指令&quot;&gt;&lt;a href=&quot;#Page指令&quot; class=&quot;headerlink&quot; title=&quot;Page指令&quot;&gt;&lt;/a&gt;Page指令&lt;/h3&gt;&lt;p&gt;属性    描述&lt;br&gt;buffer    指定out对象使用缓冲区的大小&lt;br&gt;autoFlush    控制out对象的 缓存区&lt;br&gt;contentType    指定当前JSP页面的MIME类型和字符编码&lt;br&gt;errorPage    指定当JSP页面发生异常时需要转向的错误处理页面&lt;br&gt;isErrorPage    指定当前页面是否可以作为另一个JSP页面的错误处理页面&lt;br&gt;extends    指定servlet从哪一个类继承&lt;br&gt;import    导入要使用的Java类&lt;br&gt;info    定义JSP页面的描述信息&lt;br&gt;isThreadSafe    指定对JSP页面的访问是否为线程安全&lt;br&gt;language    定义JSP页面所用的脚本语言，默认是Java&lt;br&gt;session    指定JSP页面是否使用session&lt;br&gt;isELIgnored    指定是否执行EL表达式&lt;br&gt;isScriptingEnabled    确定脚本元素能否被使用&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%@&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;attribute&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;value&quot;&lt;/span&gt; %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对应XML:&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;jsp:directive.page&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;attribute&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;value&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;include指令&quot;&gt;&lt;a href=&quot;#include指令&quot; class=&quot;headerlink&quot; title=&quot;include指令&quot;&gt;&lt;/a&gt;include指令&lt;/h3&gt;&lt;p&gt;JSP可以通过include指令来包含其他文件。被包含的文件可以是JSP文件、HTML文件或文本文件。包含的文件就好像是该JSP文件的一部分，会被同时编译执行。&lt;br&gt;Include指令的语法格式如下：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%@&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;file&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;文件相对 url 地址&quot;&lt;/span&gt; %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;jsp:directive.include&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;file&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;文件相对 url 地址&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;taglib指令：&quot;&gt;&lt;a href=&quot;#taglib指令：&quot; class=&quot;headerlink&quot; title=&quot;taglib指令：&quot;&gt;&lt;/a&gt;taglib指令：&lt;/h3&gt;&lt;p&gt;JSP API允许用户自定义标签，一个自定义标签库就是自定义标签的集合。&lt;br&gt;Taglib指令引入一个自定义标签集合的定义，包括库路径、自定义标签。&lt;br&gt;Taglib指令的语法：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%@&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;taglib&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;uri&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;uri&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;prefix&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;prefixOfTag&quot;&lt;/span&gt; %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;uri属性确定标签库的位置，prefix属性指定标签库的前缀。&lt;br&gt;等价的XML语法：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;jsp:directive.taglib&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;uri&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;uri&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;prefix&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;prefixOfTag&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;JSP行为：&quot;&gt;&lt;a href=&quot;#JSP行为：&quot; class=&quot;headerlink&quot; title=&quot;JSP行为：&quot;&gt;&lt;/a&gt;JSP行为：&lt;/h2&gt;&lt;p&gt;JSP行为标签使用XML语法结构来控制servlet引擎。它能够动态插入一个文件，重用JavaBean组件，引导用户去另一个页面，为Java插件产生相关的HTML等等。&lt;br&gt;行为标签只有一种语法格式，它严格遵守XML标准：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;jsp:action_name&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;attribute&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;value&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;JSP隐含对象：&quot;&gt;&lt;a href=&quot;#JSP隐含对象：&quot; class=&quot;headerlink&quot; title=&quot;JSP隐含对象：&quot;&gt;&lt;/a&gt;JSP隐含对象：&lt;/h2&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h2&gt;&lt;h3 id=&quot;中文编码：&quot;&gt;&lt;a href=&quot;#中文编码：&quot; class=&quot;headerlink&quot; title=&quot;中文编码：&quot;&gt;&lt;/a&gt;中文编码
    
    </summary>
    
      <category term="Java" scheme="http://ShengtaoHou.github.io/categories/Java/"/>
    
    
      <category term="JSP" scheme="http://ShengtaoHou.github.io/tags/JSP/"/>
    
  </entry>
  
  <entry>
    <title>XML</title>
    <link href="http://ShengtaoHou.github.io/2017/01/24/XML/"/>
    <id>http://ShengtaoHou.github.io/2017/01/24/XML/</id>
    <published>2017-01-24T06:59:22.000Z</published>
    <updated>2017-01-24T10:04:22.845Z</updated>
    
    <content type="html">&lt;h2 id=&quot;parse-XML-document&quot;&gt;&lt;a href=&quot;#parse-XML-document&quot; class=&quot;headerlink&quot; title=&quot;parse XML document&quot;&gt;&lt;/a&gt;parse XML document&lt;/h2&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;class&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;student&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rollno&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;393&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;firstname&lt;/span&gt;&amp;gt;&lt;/span&gt;dinkar&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;firstname&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;lastname&lt;/span&gt;&amp;gt;&lt;/span&gt;kad&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;lastname&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;nickname&lt;/span&gt;&amp;gt;&lt;/span&gt;dinkar&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;nickname&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;marks&lt;/span&gt;&amp;gt;&lt;/span&gt;85&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;marks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;student&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;student&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rollno&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;493&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;firstname&lt;/span&gt;&amp;gt;&lt;/span&gt;Vaneet&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;firstname&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;lastname&lt;/span&gt;&amp;gt;&lt;/span&gt;Gupta&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;lastname&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;nickname&lt;/span&gt;&amp;gt;&lt;/span&gt;vinni&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;nickname&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;marks&lt;/span&gt;&amp;gt;&lt;/span&gt;95&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;marks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;student&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;student&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rollno&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;593&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;firstname&lt;/span&gt;&amp;gt;&lt;/span&gt;jasvir&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;firstname&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;lastname&lt;/span&gt;&amp;gt;&lt;/span&gt;singn&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;lastname&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;nickname&lt;/span&gt;&amp;gt;&lt;/span&gt;jazz&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;nickname&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;marks&lt;/span&gt;&amp;gt;&lt;/span&gt;90&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;marks&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;student&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;class&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.tutorialspoint.xml;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.File;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.xml.parsers.DocumentBuilderFactory;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.xml.parsers.DocumentBuilder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.w3c.dom.Document;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.w3c.dom.NodeList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.w3c.dom.Node;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.w3c.dom.Element;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DomParserDemo&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         File inputFile = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(&lt;span class=&quot;string&quot;&gt;&quot;input.txt&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         DocumentBuilderFactory dbFactory &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            = DocumentBuilderFactory.newInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         Document doc = dBuilder.parse(inputFile);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         doc.getDocumentElement().normalize();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Root element :&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            + doc.getDocumentElement().getNodeName());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         NodeList nList = doc.getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&quot;student&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;----------------------------&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; temp = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; temp &amp;lt; nList.getLength(); temp++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Node nNode = nList.item(temp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;\nCurrent Element :&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               + nNode.getNodeName());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nNode.getNodeType() == Node.ELEMENT_NODE) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               Element eElement = (Element) nNode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Student roll no : &quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  + eElement.getAttribute(&lt;span class=&quot;string&quot;&gt;&quot;rollno&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;First Name : &quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  + eElement&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  .getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&quot;firstname&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  .item(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  .getTextContent());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Last Name : &quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               + eElement&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  .getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&quot;lastname&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  .item(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  .getTextContent());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Nick Name : &quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               + eElement&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  .getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&quot;nickname&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  .item(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  .getTextContent());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Marks : &quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               + eElement&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  .getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&quot;marks&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  .item(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  .getTextContent());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;步骤：&lt;br&gt;获取DocumentBuilderFactory&lt;br&gt;获取DocumentBuilder&lt;br&gt;获取Document&lt;/p&gt;
&lt;p&gt;DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();&lt;br&gt;DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();&lt;br&gt;Document doc = dBuilder.parse(inputFile);&lt;/p&gt;
&lt;p&gt;doc.getDocumentElement().normalize();&lt;/p&gt;
&lt;p&gt;获取文档树根节点：doc.getDocumentElement();&lt;/p&gt;
&lt;p&gt;获取element的名字：getNodeName();&lt;/p&gt;
&lt;p&gt;获取文档树X层次：getElementsByTagName(“x”);&lt;/p&gt;
&lt;p&gt;获取第n个子树：.item(n);&lt;/p&gt;
&lt;p&gt;获取text:getTextContent();&lt;/p&gt;
&lt;p&gt;获取attribute X的值:getAttribute(“X”);&lt;/p&gt;
&lt;h2 id=&quot;query-XML-document&quot;&gt;&lt;a href=&quot;#query-XML-document&quot; class=&quot;headerlink&quot; title=&quot;query XML document&quot;&gt;&lt;/a&gt;query XML document&lt;/h2&gt;&lt;h2 id=&quot;create-XML-document&quot;&gt;&lt;a href=&quot;#create-XML-document&quot; class=&quot;headerlink&quot; title=&quot;create XML document&quot;&gt;&lt;/a&gt;create XML document&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.tutorialspoint.xml;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.xml.parsers.DocumentBuilderFactory;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.xml.parsers.DocumentBuilder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.xml.transform.Transformer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.xml.transform.TransformerFactory;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.xml.transform.dom.DOMSource;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.xml.transform.stream.StreamResult;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.w3c.dom.Attr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.w3c.dom.Document;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.w3c.dom.Element;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.File;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CreateXmlFileDemo&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String argv[])&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         DocumentBuilderFactory dbFactory =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         DocumentBuilderFactory.newInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         DocumentBuilder dBuilder = &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dbFactory.newDocumentBuilder();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         Document doc = dBuilder.newDocument();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;// root element&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         Element rootElement = doc.createElement(&lt;span class=&quot;string&quot;&gt;&quot;cars&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         doc.appendChild(rootElement);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;//  supercars element&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         Element supercar = doc.createElement(&lt;span class=&quot;string&quot;&gt;&quot;supercars&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         rootElement.appendChild(supercar);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;// setting attribute to element&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         Attr attr = doc.createAttribute(&lt;span class=&quot;string&quot;&gt;&quot;company&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         attr.setValue(&lt;span class=&quot;string&quot;&gt;&quot;Ferrari&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         supercar.setAttributeNode(attr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;// carname element&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         Element carname = doc.createElement(&lt;span class=&quot;string&quot;&gt;&quot;carname&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         Attr attrType = doc.createAttribute(&lt;span class=&quot;string&quot;&gt;&quot;type&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         attrType.setValue(&lt;span class=&quot;string&quot;&gt;&quot;formula one&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         carname.setAttributeNode(attrType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         carname.appendChild(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         doc.createTextNode(&lt;span class=&quot;string&quot;&gt;&quot;Ferrari 101&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         supercar.appendChild(carname);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         Element carname1 = doc.createElement(&lt;span class=&quot;string&quot;&gt;&quot;carname&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         Attr attrType1 = doc.createAttribute(&lt;span class=&quot;string&quot;&gt;&quot;type&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         attrType1.setValue(&lt;span class=&quot;string&quot;&gt;&quot;sports&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         carname1.setAttributeNode(attrType1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         carname1.appendChild(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         doc.createTextNode(&lt;span class=&quot;string&quot;&gt;&quot;Ferrari 202&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         supercar.appendChild(carname1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;// write the content into xml file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         TransformerFactory transformerFactory =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         TransformerFactory.newInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         Transformer transformer =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         transformerFactory.newTransformer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         DOMSource source = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DOMSource(doc);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         StreamResult result =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StreamResult(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(&lt;span class=&quot;string&quot;&gt;&quot;C:\\cars.xml&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         transformer.transform(source, result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;// Output to console for testing&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         StreamResult consoleResult =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StreamResult(System.out);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         transformer.transform(source, consoleResult);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;cars&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;supercars&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;company&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Ferrari&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;carname&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;formula one&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Ferrari 101&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;carname&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;carname&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;sports&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Ferrari 202&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;carname&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;supercars&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;cars&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;modify-XML-document&quot;&gt;&lt;a href=&quot;#modify-XML-document&quot; class=&quot;headerlink&quot; title=&quot;modify XML document&quot;&gt;&lt;/a&gt;modify XML document&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.tutorialspoint.xml;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.File;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.xml.parsers.DocumentBuilder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.xml.parsers.DocumentBuilderFactory;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.xml.transform.Transformer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.xml.transform.TransformerFactory;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.xml.transform.dom.DOMSource;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.xml.transform.stream.StreamResult;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.w3c.dom.Document;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.w3c.dom.Element;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.w3c.dom.NamedNodeMap;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.w3c.dom.Node;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.w3c.dom.NodeList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ModifyXmlFileDemo&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String argv[])&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      File inputFile = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(&lt;span class=&quot;string&quot;&gt;&quot;input.xml&quot;&lt;/span&gt;); 	    	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      DocumentBuilderFactory docFactory =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      DocumentBuilderFactory.newInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      DocumentBuilder docBuilder = &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      docFactory.newDocumentBuilder();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      Document doc = docBuilder.parse(inputFile);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      Node cars = doc.getFirstChild();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      Node supercar = doc.getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&quot;supercars&quot;&lt;/span&gt;).item(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// update supercar attribute&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      NamedNodeMap attr = supercar.getAttributes();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      Node nodeAttr = attr.getNamedItem(&lt;span class=&quot;string&quot;&gt;&quot;company&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      nodeAttr.setTextContent(&lt;span class=&quot;string&quot;&gt;&quot;Lamborigini&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// loop the supercar child node&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      NodeList list = supercar.getChildNodes();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; temp = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; temp &amp;lt; list.getLength(); temp++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         Node node = list.item(temp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (node.getNodeType() == Node.ELEMENT_NODE) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Element eElement = (Element) node;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&quot;carname&quot;&lt;/span&gt;.equals(eElement.getNodeName()))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Ferrari 101&quot;&lt;/span&gt;.equals(eElement.getTextContent()))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  eElement.setTextContent(&lt;span class=&quot;string&quot;&gt;&quot;Lamborigini 001&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Ferrari 202&quot;&lt;/span&gt;.equals(eElement.getTextContent()))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               eElement.setTextContent(&lt;span class=&quot;string&quot;&gt;&quot;Lamborigini 002&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      NodeList childNodes = cars.getChildNodes();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; count = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; count &amp;lt; childNodes.getLength(); count++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         Node node = childNodes.item(count);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;luxurycars&quot;&lt;/span&gt;.equals(node.getNodeName()))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cars.removeChild(node);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;// write the content on console&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         TransformerFactory transformerFactory = &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         TransformerFactory.newInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         Transformer transformer = transformerFactory.newTransformer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         DOMSource source = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DOMSource(doc);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;-----------Modified File-----------&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         StreamResult consoleResult = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StreamResult(System.out);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         transformer.transform(source, consoleResult);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;cars&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;supercars&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;company&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Ferrari&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;carname&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;formula one&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Ferrari 101&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;carname&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;carname&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;sports&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Ferrari 202&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;carname&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;supercars&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;luxurycars&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;company&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Benteley&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;carname&lt;/span&gt;&amp;gt;&lt;/span&gt;Benteley 1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;carname&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;carname&lt;/span&gt;&amp;gt;&lt;/span&gt;Benteley 2&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;carname&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;carname&lt;/span&gt;&amp;gt;&lt;/span&gt;Benteley 3&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;carname&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;luxurycars&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;cars&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;cars&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;supercars&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;company&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Lamborigini&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;carname&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;formula one&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Lamborigini 001&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;carname&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;carname&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;sports&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Lamborigini 002&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;carname&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;supercars&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;cars&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;parse-XML-document&quot;&gt;&lt;a href=&quot;#parse-XML-document&quot; class=&quot;headerlink&quot; title=&quot;parse XML document&quot;&gt;&lt;/a&gt;parse XML document&lt;/h2&gt;&lt;figure c
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JDBC</title>
    <link href="http://ShengtaoHou.github.io/2017/01/23/JDBC/"/>
    <id>http://ShengtaoHou.github.io/2017/01/23/JDBC/</id>
    <published>2017-01-23T11:29:29.000Z</published>
    <updated>2017-01-24T02:49:04.097Z</updated>
    
    <content type="html">&lt;h2 id=&quot;安装JDBC&quot;&gt;&lt;a href=&quot;#安装JDBC&quot; class=&quot;headerlink&quot; title=&quot;安装JDBC&quot;&gt;&lt;/a&gt;安装JDBC&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/github_/article/details/50976255&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;link&lt;/a&gt;&lt;br&gt;把下载的文件解压后的jar文件 copy到 %JAVA_HOME%\jre\lib\ext 下， %JAVA_HOME就是jdk的安装目录。&lt;/p&gt;
&lt;h2 id=&quot;sample-code&quot;&gt;&lt;a href=&quot;#sample-code&quot; class=&quot;headerlink&quot; title=&quot;sample code&quot;&gt;&lt;/a&gt;sample code&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; web;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//STEP 1. Import required packages&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.sql.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;FirstExample&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;// JDBC driver name and database URL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String JDBC_DRIVER = &lt;span class=&quot;string&quot;&gt;&quot;com.mysql.jdbc.Driver&quot;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String DB_URL = &lt;span class=&quot;string&quot;&gt;&quot;jdbc:mysql://localhost/EMP&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;//  Database credentials&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String USER = &lt;span class=&quot;string&quot;&gt;&quot;root&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String PASS = &lt;span class=&quot;string&quot;&gt;&quot;123456&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Connection conn = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//STEP 2: Register JDBC driver&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Class.forName(&lt;span class=&quot;string&quot;&gt;&quot;com.mysql.jdbc.Driver&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//STEP 3: Open a connection&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Connecting to database...&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    conn = DriverManager.getConnection(DB_URL,USER,PASS);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//STEP 4: Execute a query to create statment with&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// required arguments for RS example.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Creating statement...&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Statement stmt = conn.createStatement(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         ResultSet.TYPE_SCROLL_INSENSITIVE,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         ResultSet.CONCUR_UPDATABLE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//STEP 5: Execute a query&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String sql = &lt;span class=&quot;string&quot;&gt;&quot;SELECT id, first, last, age FROM Employees&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ResultSet rs = stmt.executeQuery(sql);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//*****移动cursor*****&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//移动到最后一行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;移动到最后一行...&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rs.last();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//显示最后一行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;显示最后一行...&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; id  = rs.getInt(&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; age = rs.getInt(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String first = rs.getString(&lt;span class=&quot;string&quot;&gt;&quot;first&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String last = rs.getString(&lt;span class=&quot;string&quot;&gt;&quot;last&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.print(&lt;span class=&quot;string&quot;&gt;&quot;ID: &quot;&lt;/span&gt; + id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.print(&lt;span class=&quot;string&quot;&gt;&quot;, Age: &quot;&lt;/span&gt; + age);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.print(&lt;span class=&quot;string&quot;&gt;&quot;, First: &quot;&lt;/span&gt; + first);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;, Last: &quot;&lt;/span&gt; + last);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//移动到第一行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;移动到第一行...&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rs.first();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//显示第一行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;显示第一行...&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    id  = rs.getInt(&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    age = rs.getInt(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    first = rs.getString(&lt;span class=&quot;string&quot;&gt;&quot;first&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    last = rs.getString(&lt;span class=&quot;string&quot;&gt;&quot;last&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.print(&lt;span class=&quot;string&quot;&gt;&quot;ID: &quot;&lt;/span&gt; + id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.print(&lt;span class=&quot;string&quot;&gt;&quot;, Age: &quot;&lt;/span&gt; + age);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.print(&lt;span class=&quot;string&quot;&gt;&quot;, First: &quot;&lt;/span&gt; + first);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;, Last: &quot;&lt;/span&gt; + last);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//移动到第二行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;移动到第二行...&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rs.next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//显示第二行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;显示第二行...&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    id  = rs.getInt(&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    age = rs.getInt(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    first = rs.getString(&lt;span class=&quot;string&quot;&gt;&quot;first&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    last = rs.getString(&lt;span class=&quot;string&quot;&gt;&quot;last&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.print(&lt;span class=&quot;string&quot;&gt;&quot;ID: &quot;&lt;/span&gt; + id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.print(&lt;span class=&quot;string&quot;&gt;&quot;, Age: &quot;&lt;/span&gt; + age);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.print(&lt;span class=&quot;string&quot;&gt;&quot;, First: &quot;&lt;/span&gt; + first);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;, Last: &quot;&lt;/span&gt; + last);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//*****update功能*****&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//输入update前的table&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;输出update前的table....&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    printRs(rs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//给所有age+5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//移动焦点到第一行前，开始遍历。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rs.beforeFirst();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(rs.next())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; newAge = rs.getInt(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       rs.updateDouble( &lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;, newAge );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       rs.updateRow();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;输出age+5的table...&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    printRs(rs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//插入新的一行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;插入新的一行...&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rs.moveToInsertRow();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rs.updateInt(&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;105&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rs.updateString(&lt;span class=&quot;string&quot;&gt;&quot;first&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;Donald&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rs.updateString(&lt;span class=&quot;string&quot;&gt;&quot;last&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;Trump&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rs.updateInt(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;70&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//Commit row&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rs.insertRow();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;输出table...&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    printRs(rs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Delete second record from the table.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Set position to second record first&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rs.absolute( &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;删除第5行：&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//Retrieve by column name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    id  = rs.getInt(&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    age = rs.getInt(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    first = rs.getString(&lt;span class=&quot;string&quot;&gt;&quot;first&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    last = rs.getString(&lt;span class=&quot;string&quot;&gt;&quot;last&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//Display values&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.print(&lt;span class=&quot;string&quot;&gt;&quot;ID: &quot;&lt;/span&gt; + id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.print(&lt;span class=&quot;string&quot;&gt;&quot;, Age: &quot;&lt;/span&gt; + age);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.print(&lt;span class=&quot;string&quot;&gt;&quot;, First: &quot;&lt;/span&gt; + first);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;, Last: &quot;&lt;/span&gt; + last);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//Delete row&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rs.deleteRow();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;输出table...&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    printRs(rs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//STEP 8: Clean-up environment&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rs.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stmt.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    conn.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt;(SQLException se)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//Handle errors for JDBC&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    se.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt;(Exception e)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//Handle errors for Class.forName&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//finally block used to close resources&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(conn!=&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          conn.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt;(SQLException se)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       se.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;comment&quot;&gt;//end finally try&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;span class=&quot;comment&quot;&gt;//end try&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Goodbye!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;span class=&quot;comment&quot;&gt;//end main&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;printRs&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ResultSet rs)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; SQLException&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//Ensure we start with first row&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rs.beforeFirst();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(rs.next())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;//Retrieve by column name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; id  = rs.getInt(&lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; age = rs.getInt(&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       String first = rs.getString(&lt;span class=&quot;string&quot;&gt;&quot;first&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       String last = rs.getString(&lt;span class=&quot;string&quot;&gt;&quot;last&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;//Display values&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       System.out.print(&lt;span class=&quot;string&quot;&gt;&quot;ID: &quot;&lt;/span&gt; + id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       System.out.print(&lt;span class=&quot;string&quot;&gt;&quot;, Age: &quot;&lt;/span&gt; + age);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       System.out.print(&lt;span class=&quot;string&quot;&gt;&quot;, First: &quot;&lt;/span&gt; + first);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;, Last: &quot;&lt;/span&gt; + last);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   System.out.println();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;span class=&quot;comment&quot;&gt;//end printRs()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;span class=&quot;comment&quot;&gt;//end JDBCExample&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;连接database&quot;&gt;&lt;a href=&quot;#连接database&quot; class=&quot;headerlink&quot; title=&quot;连接database&quot;&gt;&lt;/a&gt;连接database&lt;/h2&gt;&lt;p&gt;步骤：&lt;/p&gt;
&lt;h3 id=&quot;1-Import-JDBC-packages&quot;&gt;&lt;a href=&quot;#1-Import-JDBC-packages&quot; class=&quot;headerlink&quot; title=&quot;1.Import JDBC packages&quot;&gt;&lt;/a&gt;1.Import JDBC packages&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.sql.*;&lt;span class=&quot;comment&quot;&gt;//for standard JDBC programs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.math.*; &lt;span class=&quot;comment&quot;&gt;//for BigDecimal and BigInteger support&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2-Register-JDBC-driver&quot;&gt;&lt;a href=&quot;#2-Register-JDBC-driver&quot; class=&quot;headerlink&quot; title=&quot;2.Register JDBC driver&quot;&gt;&lt;/a&gt;2.Register JDBC driver&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//method 1:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Class.forName(&lt;span class=&quot;string&quot;&gt;&quot;com.mysql.jdbc.Driver&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//oracle:  &quot;oracle.jdbc.driver.OracleDriver&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt;(ClassNotFoundException ex) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Error: unable to load driver class!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   System.exit(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Class.forName(&lt;span class=&quot;string&quot;&gt;&quot;com.mysql.jdbc.Driver&quot;&lt;/span&gt;).newInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt;(ClassNotFoundException ex) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Error: unable to load driver class!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   System.exit(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt;(IllegalAccessException ex) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Error: access problem while loading!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   System.exit(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt;(InstantiationException ex) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Error: unable to instantiate driver!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   System.exit(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//method 2:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Driver myDriver = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; com.mysql.jdbc.Driver();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   DriverManager.registerDriver( myDriver );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt;(ClassNotFoundException ex) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Error: unable to load driver class!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   System.exit(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-Database-URL-formulation&quot;&gt;&lt;a href=&quot;#3-Database-URL-formulation&quot; class=&quot;headerlink&quot; title=&quot;3.Database URL formulation&quot;&gt;&lt;/a&gt;3.Database URL formulation&lt;/h3&gt;&lt;p&gt;(1)getConnection(String url)&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;String URL = &lt;span class=&quot;string&quot;&gt;&quot;jdbc:oracle:thin:username/password@amrood:1521:EMP&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Connection conn = DriverManager.getConnection(URL);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;(2)getConnection(String url, Properties prop)&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;String URL = &lt;span class=&quot;string&quot;&gt;&quot;jdbc:oracle:thin:@amrood:1521:EMP&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Properties info = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Properties( );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;info.put( &lt;span class=&quot;string&quot;&gt;&quot;user&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;username&quot;&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;info.put( &lt;span class=&quot;string&quot;&gt;&quot;password&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;password&quot;&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Connection conn = DriverManager.getConnection(URL, info);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;(3)getConnection(String url, String user, String password)&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;String URL = &lt;span class=&quot;string&quot;&gt;&quot;jdbc:oracle:thin:@amrood:1521:EMP&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;String USER = &lt;span class=&quot;string&quot;&gt;&quot;username&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;String PASS = &lt;span class=&quot;string&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Connection conn = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//create a connection object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;conn = DriverManager.getConnection(DB_URL,USER,PASS);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;不同数据库的JDBC driver和URL formulation不同：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;RDBMS&lt;/th&gt;
&lt;th&gt;JDBC driver name&lt;/th&gt;
&lt;th&gt;URL format&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;MySQL&lt;/td&gt;
&lt;td&gt;com.mysql.jdbc.Driver&lt;/td&gt;
&lt;td&gt;jdbc:mysql://hostname/ databaseName&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Oracle&lt;/td&gt;
&lt;td&gt;oracle.jdbc.driver.OracleDriver&lt;/td&gt;
&lt;td&gt;jdbc:oracle:thin:@hostname:port Number:databaseName&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DB&lt;/td&gt;
&lt;td&gt;COM.ibm.db2.jdbc.net.DB2Driver&lt;/td&gt;
&lt;td&gt;jdbc:db2:hostname:port Number/databaseName&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;4-Close-JDBC-connection&quot;&gt;&lt;a href=&quot;#4-Close-JDBC-connection&quot; class=&quot;headerlink&quot; title=&quot;4.Close JDBC connection&quot;&gt;&lt;/a&gt;4.Close JDBC connection&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;conn.close();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Statements-PreparedStatement-and-CallableStatement&quot;&gt;&lt;a href=&quot;#Statements-PreparedStatement-and-CallableStatement&quot; class=&quot;headerlink&quot; title=&quot;Statements, PreparedStatement and CallableStatement&quot;&gt;&lt;/a&gt;Statements, PreparedStatement and CallableStatement&lt;/h2&gt;&lt;h3 id=&quot;The-Statement-Objects&quot;&gt;&lt;a href=&quot;#The-Statement-Objects&quot; class=&quot;headerlink&quot; title=&quot;The Statement Objects&quot;&gt;&lt;/a&gt;The Statement Objects&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Statement stmt = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   stmt = conn.createStatement( );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   . . .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (SQLException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   . . .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   stmt.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;PreparedStatement&quot;&gt;&lt;a href=&quot;#PreparedStatement&quot; class=&quot;headerlink&quot; title=&quot;PreparedStatement&quot;&gt;&lt;/a&gt;PreparedStatement&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;PreparedStatement pstmt = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   String SQL = &lt;span class=&quot;string&quot;&gt;&quot;Update Employees SET age = ? WHERE id = ?&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   pstmt = conn.prepareStatement(SQL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   . . .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (SQLException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   . . .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   pstmt.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;CallableStatement&quot;&gt;&lt;a href=&quot;#CallableStatement&quot; class=&quot;headerlink&quot; title=&quot;CallableStatement&quot;&gt;&lt;/a&gt;CallableStatement&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CallableStatement cstmt = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   String SQL = &lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;call getEmpName (?, ?)&amp;#125;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   cstmt = conn.prepareCall (SQL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   . . .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (SQLException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   . . .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   cstmt.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Result-sets&quot;&gt;&lt;a href=&quot;#Result-sets&quot; class=&quot;headerlink&quot; title=&quot;Result sets&quot;&gt;&lt;/a&gt;Result sets&lt;/h2&gt;&lt;h3 id=&quot;1-Type-of-ResultSet&quot;&gt;&lt;a href=&quot;#1-Type-of-ResultSet&quot; class=&quot;headerlink&quot; title=&quot;1.Type of ResultSet&quot;&gt;&lt;/a&gt;1.Type of ResultSet&lt;/h3&gt;&lt;p&gt;ResultSet.TYPE_FORWARD_ONLY&lt;br&gt;ResultSet.TYPE_SCROLL_INSENSITIVE&lt;br&gt;ResultSet.TYPE_SCROLL_SENSITIVE.&lt;/p&gt;
&lt;h3 id=&quot;2-Concurrency-of-ResultSet&quot;&gt;&lt;a href=&quot;#2-Concurrency-of-ResultSet&quot; class=&quot;headerlink&quot; title=&quot;2.Concurrency of ResultSet&quot;&gt;&lt;/a&gt;2.Concurrency of ResultSet&lt;/h3&gt;&lt;p&gt;ResultSet.CONCUR_READ_ONLY&lt;br&gt;ResultSet.CONCUR_UPDATABLE&lt;/p&gt;
&lt;h3 id=&quot;3-Navigating-a-Result-Set&quot;&gt;&lt;a href=&quot;#3-Navigating-a-Result-Set&quot; class=&quot;headerlink&quot; title=&quot;3.Navigating a Result Set&quot;&gt;&lt;/a&gt;3.Navigating a Result Set&lt;/h3&gt;&lt;p&gt;1    public void beforeFirst() throws SQLException&lt;/p&gt;
&lt;p&gt;2    public void afterLast() throws SQLException&lt;/p&gt;
&lt;p&gt;3    public boolean first() throws SQLException&lt;/p&gt;
&lt;p&gt;4    public void last() throws SQLException&lt;/p&gt;
&lt;p&gt;5    public boolean absolute(int row) throws SQLException&lt;/p&gt;
&lt;p&gt;6    public boolean relative(int row) throws SQLException&lt;/p&gt;
&lt;p&gt;7    public boolean previous() throws SQLException&lt;/p&gt;
&lt;p&gt;8    public boolean next() throws SQLException&lt;/p&gt;
&lt;p&gt;9    public int getRow() throws SQLException&lt;/p&gt;
&lt;p&gt;10    public void moveToInsertRow() throws SQLException&lt;/p&gt;
&lt;p&gt;11    public void moveToCurrentRow() throws SQLException&lt;/p&gt;
&lt;h3 id=&quot;4-Viewing-a-Result-Set&quot;&gt;&lt;a href=&quot;#4-Viewing-a-Result-Set&quot; class=&quot;headerlink&quot; title=&quot;4.Viewing a Result Set&quot;&gt;&lt;/a&gt;4.Viewing a Result Set&lt;/h3&gt;&lt;p&gt;public int getInt(String columnName) throws SQLException&lt;/p&gt;
&lt;p&gt;public int getInt(int columnIndex) throws SQLException&lt;/p&gt;
&lt;h3 id=&quot;5-Updating-a-Result-Set&quot;&gt;&lt;a href=&quot;#5-Updating-a-Result-Set&quot; class=&quot;headerlink&quot; title=&quot;5.Updating a Result Set&quot;&gt;&lt;/a&gt;5.Updating a Result Set&lt;/h3&gt;&lt;p&gt;public void updateString(int columnIndex, String s) throws SQLException&lt;/p&gt;
&lt;p&gt;public void updateString(String columnName, String s) throws SQLException&lt;/p&gt;
&lt;p&gt;1    public void updateRow()&lt;br&gt;Updates the current row by updating the corresponding row in the database.&lt;/p&gt;
&lt;p&gt;2    public void deleteRow()&lt;br&gt;Deletes the current row from the database&lt;/p&gt;
&lt;p&gt;3    public void refreshRow()&lt;br&gt;Refreshes the data in the result set to reflect any recent changes in the database.&lt;/p&gt;
&lt;p&gt;4    public void cancelRowUpdates()&lt;br&gt;Cancels any updates made on the current row.&lt;/p&gt;
&lt;p&gt;5    public void insertRow()&lt;br&gt;Inserts a row into the database. This method can only be invoked when the cursor is pointing to the insert row.&lt;/p&gt;
&lt;h2 id=&quot;Transactions&quot;&gt;&lt;a href=&quot;#Transactions&quot; class=&quot;headerlink&quot; title=&quot;Transactions&quot;&gt;&lt;/a&gt;Transactions&lt;/h2&gt;&lt;p&gt;conn.setAutoCommit(false);&lt;br&gt;conn.commit( );&lt;br&gt;conn.rollback( );&lt;/p&gt;
&lt;p&gt;The Connection object has two new methods that help you manage savepoints −&lt;/p&gt;
&lt;p&gt;setSavepoint(String savepointName): Defines a new savepoint. It also returns a Savepoint object.&lt;/p&gt;
&lt;p&gt;releaseSavepoint(Savepoint savepointName): Deletes a savepoint. Notice that it requires a Savepoint object as a parameter. This object is usually a savepoint generated by the setSavepoint() method.&lt;/p&gt;
&lt;p&gt;There is one rollback (String savepointName) method, which rolls back work to the specified savepoint.&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//Assume a valid connection object conn&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   conn.setAutoCommit(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Statement stmt = conn.createStatement();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//set a Savepoint&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Savepoint savepoint1 = conn.setSavepoint(&lt;span class=&quot;string&quot;&gt;&quot;Savepoint1&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   String SQL = &lt;span class=&quot;string&quot;&gt;&quot;INSERT INTO Employees &quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;VALUES (106, 20, &#39;Rita&#39;, &#39;Tez&#39;)&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   stmt.executeUpdate(SQL);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//Submit a malformed SQL statement that breaks&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   String SQL = &lt;span class=&quot;string&quot;&gt;&quot;INSERTED IN Employees &quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;VALUES (107, 22, &#39;Sita&#39;, &#39;Tez&#39;)&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   stmt.executeUpdate(SQL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;// If there is no error, commit the changes.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   conn.commit();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt;(SQLException se)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;// If there is any error.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   conn.rollback(savepoint1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;JDBC-Exception&quot;&gt;&lt;a href=&quot;#JDBC-Exception&quot; class=&quot;headerlink&quot; title=&quot;JDBC Exception&quot;&gt;&lt;/a&gt;JDBC Exception&lt;/h2&gt;&lt;h2 id=&quot;batch&quot;&gt;&lt;a href=&quot;#batch&quot; class=&quot;headerlink&quot; title=&quot;batch&quot;&gt;&lt;/a&gt;batch&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Create statement object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Statement stmt = conn.createStatement();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Set auto-commit to false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;conn.setAutoCommit(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Create SQL statement&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;String SQL = &lt;span class=&quot;string&quot;&gt;&quot;INSERT INTO Employees (id, first, last, age) &quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;string&quot;&gt;&quot;VALUES(200,&#39;Zia&#39;, &#39;Ali&#39;, 30)&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Add above SQL statement in the batch.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stmt.addBatch(SQL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Create one more SQL statement&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;String SQL = &lt;span class=&quot;string&quot;&gt;&quot;INSERT INTO Employees (id, first, last, age) &quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;string&quot;&gt;&quot;VALUES(201,&#39;Raj&#39;, &#39;Kumar&#39;, 35)&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Add above SQL statement in the batch.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stmt.addBatch(SQL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Create one more SQL statement&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;String SQL = &lt;span class=&quot;string&quot;&gt;&quot;UPDATE Employees SET age = 35 &quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;string&quot;&gt;&quot;WHERE id = 100&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Add above SQL statement in the batch.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stmt.addBatch(SQL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Create an int[] to hold returned values&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] count = stmt.executeBatch();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Explicitly commit statements to apply changes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;conn.commit();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Create SQL statement&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;String SQL = &lt;span class=&quot;string&quot;&gt;&quot;INSERT INTO Employees (id, first, last, age) &quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;string&quot;&gt;&quot;VALUES(?, ?, ?, ?)&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Create PrepareStatement object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PreparedStatemen pstmt = conn.prepareStatement(SQL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Set auto-commit to false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;conn.setAutoCommit(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Set the variables&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pstmt.setInt( &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pstmt.setString( &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Pappu&quot;&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pstmt.setString( &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Singh&quot;&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pstmt.setInt( &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;33&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Add it to the batch&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pstmt.addBatch();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Set the variables&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pstmt.setInt( &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;401&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pstmt.setString( &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Pawan&quot;&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pstmt.setString( &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Singh&quot;&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pstmt.setInt( &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;31&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Add it to the batch&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pstmt.addBatch();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//add more batches&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Create an int[] to hold returned values&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] count = stmt.executeBatch();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Explicitly commit statements to apply changes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;conn.commit();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装JDBC&quot;&gt;&lt;a href=&quot;#安装JDBC&quot; class=&quot;headerlink&quot; title=&quot;安装JDBC&quot;&gt;&lt;/a&gt;安装JDBC&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/github_/article/details/
    
    </summary>
    
      <category term="Java" scheme="http://ShengtaoHou.github.io/categories/Java/"/>
    
    
      <category term="JDBC" scheme="http://ShengtaoHou.github.io/tags/JDBC/"/>
    
  </entry>
  
  <entry>
    <title>sql</title>
    <link href="http://ShengtaoHou.github.io/2017/01/23/sql/"/>
    <id>http://ShengtaoHou.github.io/2017/01/23/sql/</id>
    <published>2017-01-23T08:02:10.000Z</published>
    <updated>2017-01-23T11:36:11.365Z</updated>
    
    <content type="html">&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;span class=&quot;keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;database&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DATABASE&lt;/span&gt; database_name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;span class=&quot;keyword&quot;&gt;drop&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;database&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DATABASE&lt;/span&gt; database_name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;span class=&quot;keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;table&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; Employees&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	age &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;last&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;span class=&quot;keyword&quot;&gt;drop&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;table&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; table_name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;span class=&quot;keyword&quot;&gt;insert&lt;/span&gt; a &lt;span class=&quot;keyword&quot;&gt;row&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; table_name &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt;(colum_name1,colum_name2···);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;some&lt;/span&gt; information&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; colum_name1,colum_name2···&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; table_name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; conditions;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;span class=&quot;keyword&quot;&gt;update&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;UPDATE&lt;/span&gt; table_name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SET&lt;/span&gt; colum_name1=&lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;,colum_name2=&lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;,···&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; conditions;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;span class=&quot;keyword&quot;&gt;delete&lt;/span&gt; a &lt;span class=&quot;keyword&quot;&gt;row&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; table_name &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; conditions&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;span class=&quot;keyword&quot;&gt;crea
    
    </summary>
    
      <category term="sql" scheme="http://ShengtaoHou.github.io/categories/sql/"/>
    
    
      <category term="sql" scheme="http://ShengtaoHou.github.io/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>科学上网</title>
    <link href="http://ShengtaoHou.github.io/2017/01/20/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    <id>http://ShengtaoHou.github.io/2017/01/20/科学上网/</id>
    <published>2017-01-20T05:28:46.000Z</published>
    <updated>2017-01-20T05:34:02.484Z</updated>
    
    <content type="html">&lt;h2 id=&quot;购买一个vps&quot;&gt;&lt;a href=&quot;#购买一个vps&quot; class=&quot;headerlink&quot; title=&quot;购买一个vps&quot;&gt;&lt;/a&gt;购买一个vps&lt;/h2&gt;&lt;p&gt;vps相当于一个在国外一直开着的电脑，我选择了最便宜的搬瓦工，可以用支付宝支付，年费19刀，听说走LA的路线较快。&lt;/p&gt;
&lt;h2 id=&quot;安装shadowsocks&quot;&gt;&lt;a href=&quot;#安装shadowsocks&quot; class=&quot;headerlink&quot; title=&quot;安装shadowsocks&quot;&gt;&lt;/a&gt;安装shadowsocks&lt;/h2&gt;&lt;p&gt;打开kiviVM，一键安装shadowsocks，完成后，会给出server port， server password信息&lt;/p&gt;
&lt;h2 id=&quot;安装ss客户端&quot;&gt;&lt;a href=&quot;#安装ss客户端&quot; class=&quot;headerlink&quot; title=&quot;安装ss客户端&quot;&gt;&lt;/a&gt;安装ss客户端&lt;/h2&gt;&lt;p&gt;下载ss不同平台的客户端，输入server port，IP，password等信息就可以上网了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;购买一个vps&quot;&gt;&lt;a href=&quot;#购买一个vps&quot; class=&quot;headerlink&quot; title=&quot;购买一个vps&quot;&gt;&lt;/a&gt;购买一个vps&lt;/h2&gt;&lt;p&gt;vps相当于一个在国外一直开着的电脑，我选择了最便宜的搬瓦工，可以用支付宝支付，年费19刀，听说走L
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>访问权限控制</title>
    <link href="http://ShengtaoHou.github.io/2017/01/16/%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/"/>
    <id>http://ShengtaoHou.github.io/2017/01/16/访问权限控制/</id>
    <published>2017-01-16T07:58:29.000Z</published>
    <updated>2017-01-16T07:58:29.606Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>java initialization and cleanup</title>
    <link href="http://ShengtaoHou.github.io/2017/01/14/java-initialization-and-cleanup/"/>
    <id>http://ShengtaoHou.github.io/2017/01/14/java-initialization-and-cleanup/</id>
    <published>2017-01-14T12:02:54.000Z</published>
    <updated>2017-01-16T07:24:36.849Z</updated>
    
    <content type="html">&lt;h2 id=&quot;5-1构造器&quot;&gt;&lt;a href=&quot;#5-1构造器&quot; class=&quot;headerlink&quot; title=&quot;5.1构造器&quot;&gt;&lt;/a&gt;5.1构造器&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;忘记初始化会导致bug，忘记清除会导致被占用的资源得不到释放，内存被耗尽。&lt;br&gt;&amp;emsp;&amp;emsp;java的构造器和类名同名，可以自定义构造器，&lt;/p&gt;
&lt;h2 id=&quot;5-2方法重载&quot;&gt;&lt;a href=&quot;#5-2方法重载&quot; class=&quot;headerlink&quot; title=&quot;5.2方法重载&quot;&gt;&lt;/a&gt;5.2方法重载&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;一个构造函数或者函数，参数类型不同，参数顺序不同都会导致方法的重载。&lt;br&gt;&amp;emsp;&amp;emsp;如果传入参数类型小于定义参数类型，会导致传入类型提升，顺序为：char,byte,short,int,long,float,double,需要注意的是：不存在char定义类型且存在int定义类型时，会提升至int，无int定义类型会提升至long，float，double。&lt;br&gt;&amp;emsp;&amp;emsp;如果传入参数类型大于定义参数类型，会进行类型转换，窄化范围：double，float，long，int，short，byte，char。&lt;br&gt;&amp;emsp;&amp;emsp;根据返回值来重载方法是行不通的，除非这样：int x=f()；明确声明了返回值。&lt;/p&gt;
&lt;h2 id=&quot;5-3默认构造器&quot;&gt;&lt;a href=&quot;#5-3默认构造器&quot; class=&quot;headerlink&quot; title=&quot;5.3默认构造器&quot;&gt;&lt;/a&gt;5.3默认构造器&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;默认构造器没有参数，在new一个对象的时候会自动创建默认构造器，例如：Bird b=new Bird();但是，如果明确的定义构造器，编译器就不会帮你生动生成默认构造器，如果没有明确定义默认构造器，就会报错。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Bird&lt;/span&gt;()&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Bird(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i)&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Bird(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; i)&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Test&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String args)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Bird b=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Bird();&lt;span class=&quot;comment&quot;&gt;//error&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Bird b=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Bird(&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;5-4-this关键字&quot;&gt;&lt;a href=&quot;#5-4-this关键字&quot; class=&quot;headerlink&quot; title=&quot;5.4 this关键字&quot;&gt;&lt;/a&gt;5.4 this关键字&lt;/h2&gt;&lt;p&gt;看一段程序：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//: initialization/BananaPeel.java&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Banana&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;peel&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i)&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;/* ... */&lt;/span&gt; &amp;#125; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BananaPeel&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Banana a = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Banana(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Banana();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.peel(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b.peel(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;comment&quot;&gt;///:~&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;peel函数被调用的时候，怎么知道它是peel a还是b呢？实际上，peel函数在调用的时候，会把对象也当做参数。实际上是这样的：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Banana.peel(a, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Banana.peel(b, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;如果你想在一个方法中表示当前的对象，可以使用this关键字，static 方法不能使用this。如果一个class里的方法调用另一个class的方法，可以省略this 关键词。this keyword经常用在return 中，表示返回当前对象：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//: initialization/Leaf.java&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Simple use of the &quot;this&quot; keyword.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Leaf&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;Leaf &lt;span class=&quot;title&quot;&gt;increment&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;i = &quot;&lt;/span&gt; + i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Leaf x = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Leaf();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x.increment().increment().increment().print();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;comment&quot;&gt;/* Output:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i = 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//:~&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;每次increment方法调用后都返回当前的obejct。&lt;br&gt;&amp;emsp;&amp;emsp;The this keyword is also useful for passing the current object to another method as its argument:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//: initialization/PassingThis.java&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;eat&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Apple apple)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Apple peeled = apple.getPeeled();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Yummy&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Peeler&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Apple &lt;span class=&quot;title&quot;&gt;peel&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Apple apple)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ... remove peel&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; apple; &lt;span class=&quot;comment&quot;&gt;// Peeled&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Apple&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;Apple &lt;span class=&quot;title&quot;&gt;getPeeled&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Peeler.peel(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;); &amp;#125; &lt;span class=&quot;comment&quot;&gt;//here&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;PassingThis&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person().eat(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Apple());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* Output:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Yummy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//:~&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;java缺什么就new什么，c吃苹果是自己动手削苹果，java是让苹果自己削自己。&lt;/p&gt;
&lt;h3 id=&quot;Calling-constructors-from-constructors&quot;&gt;&lt;a href=&quot;#Calling-constructors-from-constructors&quot; class=&quot;headerlink&quot; title=&quot;Calling constructors from constructors&quot;&gt;&lt;/a&gt;Calling constructors from constructors&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//: initialization/Flower.java&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Calling constructors with &quot;this&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; net.mindview.util.Print.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Flower&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; petalCount = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	String s = &lt;span class=&quot;string&quot;&gt;&quot;initial value&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Flower(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; petals) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		petalCount = petals;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		print(&lt;span class=&quot;string&quot;&gt;&quot;Constructor w/ int arg only, petalCount= &quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		+ petalCount);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Flower(String ss) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		print(&lt;span class=&quot;string&quot;&gt;&quot;Constructor w/ String arg only, s = &quot;&lt;/span&gt; + ss);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		s = ss;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Flower(String s, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; petals) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;(petals);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//! this(s); // Can’t call two!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.s = s; &lt;span class=&quot;comment&quot;&gt;// Another use of &quot;this&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		print(&lt;span class=&quot;string&quot;&gt;&quot;String &amp;amp; int args&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Flower() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;hi&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;47&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		print(&lt;span class=&quot;string&quot;&gt;&quot;default constructor (no args)&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;printPetalCount&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//! this(11); // Not inside non-constructor!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		print(&lt;span class=&quot;string&quot;&gt;&quot;petalCount = &quot;&lt;/span&gt; + petalCount + &lt;span class=&quot;string&quot;&gt;&quot; s = &quot;&lt;/span&gt;+ s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Flower x = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Flower();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		x.printPetalCount();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* Output:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Constructor w/ int arg only, petalCount= 47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;String &amp;amp; int args&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;default constructor (no args)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;petalCount = 47 s = hi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//:~&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;while you can call one constructor using this, you cannot call two. In addition, the constructor call must be the first thing you do, or you’ll get a compiler error message.&lt;br&gt;&amp;emsp;&amp;emsp;using this.s, to say that you’re referring to the member data.&lt;br&gt;&amp;emsp;&amp;emsp;the compiler won’t let you call a constructor from inside any method other than a constructor.&lt;/p&gt;
&lt;h3 id=&quot;static&quot;&gt;&lt;a href=&quot;#static&quot; class=&quot;headerlink&quot; title=&quot;static&quot;&gt;&lt;/a&gt;static&lt;/h3&gt;&lt;h2 id=&quot;5-5-终结处理和垃圾回收器&quot;&gt;&lt;a href=&quot;#5-5-终结处理和垃圾回收器&quot; class=&quot;headerlink&quot; title=&quot;5.5 终结处理和垃圾回收器&quot;&gt;&lt;/a&gt;5.5 终结处理和垃圾回收器&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;garbage collector 只会release那些由new分配的memory。&lt;br&gt;&amp;emsp;&amp;emsp;finalize( )在cleanup发生之前做一些操作,好比死前说几句遗言。finalize很少用。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//: initialization/TerminationCondition.java&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Using finalize() to detect an object that&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// hasn’t been properly cleaned up.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Book&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; checkedOut = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Book(&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; checkOut) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;checkedOut = checkOut;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;checkIn&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;checkedOut = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;finalize&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(checkedOut)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Error: checked out&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Normally, you’ll also do this:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// super.finalize(); // Call the base-class version&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TerminationCondition&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Book novel = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Book(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Proper cleanup:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;novel.checkIn();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Drop the reference, forget to clean up:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Book(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Force garbage collection &amp;amp; finalization:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.gc();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;comment&quot;&gt;/* Output:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Error: checked out&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//:~&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;垃圾回收器原理：&quot;&gt;&lt;a href=&quot;#垃圾回收器原理：&quot; class=&quot;headerlink&quot; title=&quot;垃圾回收器原理：&quot;&gt;&lt;/a&gt;垃圾回收器原理：&lt;/h3&gt;&lt;h2 id=&quot;5-6-成员初始化&quot;&gt;&lt;a href=&quot;#5-6-成员初始化&quot; class=&quot;headerlink&quot; title=&quot;5.6 成员初始化&quot;&gt;&lt;/a&gt;5.6 成员初始化&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;即使是基本数据类型也要初始化，未初始化就使用会报错，尽管未初始化的变量也会有默认值。&lt;br&gt;&amp;emsp;&amp;emsp;指定初始化，在定义的时候赋初值。&lt;/p&gt;
&lt;h2 id=&quot;5-7-构造器初始化&quot;&gt;&lt;a href=&quot;#5-7-构造器初始化&quot; class=&quot;headerlink&quot; title=&quot;5.7 构造器初始化&quot;&gt;&lt;/a&gt;5.7 构造器初始化&lt;/h2&gt;&lt;p&gt;initialization是在所有的method之前，包括在construct之前：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//: initialization/OrderOfInitialization.java&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Demonstrates initialization order.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; net.mindview.util.Print.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// When the constructor is called to create a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Window object, you’ll see a message:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Window&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Window(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; marker) &amp;#123; print(&lt;span class=&quot;string&quot;&gt;&quot;Window(&quot;&lt;/span&gt; + marker + &lt;span class=&quot;string&quot;&gt;&quot;)&quot;&lt;/span&gt;); &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;House&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Window w1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Window(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// Before constructor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;House() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Show that we’re in the constructor:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&lt;span class=&quot;string&quot;&gt;&quot;House()&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;w3 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Window(&lt;span class=&quot;number&quot;&gt;33&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// Reinitialize w3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Window w2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Window(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// After constructor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123; print(&lt;span class=&quot;string&quot;&gt;&quot;f()&quot;&lt;/span&gt;); &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Window w3 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Window(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// At end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;OrderOfInitialization&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;House h = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; House();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;h.f(); &lt;span class=&quot;comment&quot;&gt;// Shows that construction is done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;comment&quot;&gt;/* Output:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Window(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Window(2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Window(3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;House()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Window(33)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//:~&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;5-1构造器&quot;&gt;&lt;a href=&quot;#5-1构造器&quot; class=&quot;headerlink&quot; title=&quot;5.1构造器&quot;&gt;&lt;/a&gt;5.1构造器&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;忘记初始化会导致bug，忘记清除会导致被占用的资源得不到释放，内存被耗尽。&lt;br&gt;&amp;
    
    </summary>
    
      <category term="java" scheme="http://ShengtaoHou.github.io/categories/java/"/>
    
    
      <category term="java" scheme="http://ShengtaoHou.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>java入门</title>
    <link href="http://ShengtaoHou.github.io/2017/01/14/java/"/>
    <id>http://ShengtaoHou.github.io/2017/01/14/java/</id>
    <published>2017-01-14T12:01:33.000Z</published>
    <updated>2017-01-24T11:35:02.832Z</updated>
    
    <content type="html">&lt;h2 id=&quot;继承&quot;&gt;&lt;a href=&quot;#继承&quot; class=&quot;headerlink&quot; title=&quot;继承&quot;&gt;&lt;/a&gt;继承&lt;/h2&gt;&lt;p&gt;继承的特性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;子类拥有父类非private的属性，方法。&lt;/li&gt;
&lt;li&gt;子类可以拥有自己的属性和方法，即子类可以对父类进行扩展。&lt;/li&gt;
&lt;li&gt;子类可以用自己的方式实现父类的方法。&lt;br&gt;-Java的继承是单继承，但是可以多重继承，单继承就是一个子类只能继承一个父类，多重继承就是，例如A类继承B类，B类继承C类，所以按照关系就是C类是B类的父类，B类是A类的父类，这是java继承区别于C++继承的一个特性。&lt;/li&gt;
&lt;li&gt;提高了类之间的耦合性（继承的缺点，耦合度高就会造成代码之间的联系）。&lt;br&gt;继承关键字&lt;br&gt;继承可以使用 extends 和 implements 这两个关键字来实现继承，而且所有的类都是继承于 java.lang.Object，当一个类没有继承的两个关键字，则默认继承object（这个类在 java.lang 包中，所以不需要 import）祖先类。&lt;br&gt;extends关键字&lt;br&gt;在 Java 中，类的继承是单一继承，也就是说，一个子类只能拥有一个父类，所以 extends 只能继承一个类。&lt;br&gt;implements关键字&lt;br&gt;使用 implements 关键字可以变相的使java具有多继承的特性，使用范围为类继承接口的情况，可以同时继承多个接口（接口跟接口之间采用逗号分隔）。&lt;br&gt;super 与 this 关键字&lt;br&gt;super关键字：我们可以通过super关键字来实现对父类成员的访问，用来引用当前对象的父类。&lt;br&gt;this关键字：指向自己的引用&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;继承&quot;&gt;&lt;a href=&quot;#继承&quot; class=&quot;headerlink&quot; title=&quot;继承&quot;&gt;&lt;/a&gt;继承&lt;/h2&gt;&lt;p&gt;继承的特性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;子类拥有父类非private的属性，方法。&lt;/li&gt;
&lt;li&gt;子类可以拥有自己的属性和方法，即子类可以
    
    </summary>
    
      <category term="java" scheme="http://ShengtaoHou.github.io/categories/java/"/>
    
    
      <category term="java" scheme="http://ShengtaoHou.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>git命令</title>
    <link href="http://ShengtaoHou.github.io/2016/12/19/git%E5%91%BD%E4%BB%A4/"/>
    <id>http://ShengtaoHou.github.io/2016/12/19/git命令/</id>
    <published>2016-12-18T17:05:09.000Z</published>
    <updated>2016-12-27T14:51:25.350Z</updated>
    
    <content type="html">&lt;p&gt;将文件上传到github步骤总结：&lt;/p&gt;
&lt;p&gt;1 在github上创建一个repository&lt;br&gt;2 cd到要上传的文件夹&lt;/p&gt;
&lt;p&gt;运行以下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;# message&amp;quot; &amp;gt;&amp;gt; README.md&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git init&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git add .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git commit -m &amp;quot;some message&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git remote add origin https://github.com/youraccount/yourproject.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push -u origin master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以后有增加新的代码，比如添加hello.c，运行以下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git add hello.c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git git commit -m &amp;quot;some message&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push origin master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;将文件上传到github步骤总结：&lt;/p&gt;
&lt;p&gt;1 在github上创建一个repository&lt;br&gt;2 cd到要上传的文件夹&lt;/p&gt;
&lt;p&gt;运行以下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class
    
    </summary>
    
      <category term="git" scheme="http://ShengtaoHou.github.io/categories/git/"/>
    
    
      <category term="git" scheme="http://ShengtaoHou.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Deadlock</title>
    <link href="http://ShengtaoHou.github.io/2016/12/18/Deadlock/"/>
    <id>http://ShengtaoHou.github.io/2016/12/18/Deadlock/</id>
    <published>2016-12-17T19:08:27.000Z</published>
    <updated>2017-01-01T10:49:04.473Z</updated>
    
    <content type="html">&lt;h2 id=&quot;bounded-buffer问题&quot;&gt;&lt;a href=&quot;#bounded-buffer问题&quot; class=&quot;headerlink&quot; title=&quot;bounded buffer问题&quot;&gt;&lt;/a&gt;bounded buffer问题&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;一个buffer是有限的，有n个实体，可以存放n个东西，刚开始时，buffer刚开始时是空的，生产者线程负责往buffer加东西，消费者线程负责从buffer里取东西，同时存在多个消费者，多个生产者线程，必须满足：&lt;br&gt;1 buffer为空时，消费者不能再取东西&lt;br&gt;2 buffer为满时，生产者不能再加东西&lt;br&gt;3 每次只能有一个线程在执行&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Shared pointers: “In”, “Out”&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Shared Semaphores: mutex, empty, full;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; mutex = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;//互斥锁&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; empty = N; &lt;span class=&quot;comment&quot;&gt;//empty表示空实体的个数，刚开始时，有N个空实体&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; full = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;    &lt;span class=&quot;comment&quot;&gt;//full表示满实体的个数，刚开始时，有0个满实体&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Producer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; wait(empty);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; wait(mutex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;//produce item&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;//update “In”&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; signal(mutex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; signal(full);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Consumer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; wait(full);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; wait(mutex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;//consume item&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;//update “Out”&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; signal(mutex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; signal(empty);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;互斥锁在宏观上看，就是所有处于wait和signal之间的程序，只能被一个线程执行，一个线程进入后，会将该部分锁上，执行完毕，再通过signal将锁打开，让其他线程进入。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;当buffer为空时，full=0，consumer线程就必须等待，直到producer生产了一个东西signal（full）才能进入，&lt;br&gt;&amp;emsp;&amp;emsp;当buffer为满时，empty=0，producer线程就必须等待，直到consumer消费了一个东西signal（empty）才能进入，&lt;br&gt;&amp;emsp;&amp;emsp;互斥锁mutex的应用保证了每时每刻只能有一个线程在对buffer进行操作&lt;/p&gt;
&lt;h2 id=&quot;reader-writer问题&quot;&gt;&lt;a href=&quot;#reader-writer问题&quot; class=&quot;headerlink&quot; title=&quot;reader-writer问题&quot;&gt;&lt;/a&gt;reader-writer问题&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;有多个线程对data作读，一个线程对data做写，读是可以并发的，因为读不会改变数据，但是读和写同时进行就会产生问题，不同的读者读到的是不一样的，这就是reader-writer问题&lt;br&gt;Reader-write问题必须保证：&lt;br&gt;1当一个写程序进入写操作时，其他的读程序必须等待&lt;br&gt;2多个写程序可以并发进行&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mutex = Semaphore(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wrt = Semaphore(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;readcount = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Writer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; wait(wrt);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;/*writing is performed*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; signal(wrt);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Reader&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; wait(mutex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; readcount++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (reardcount == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; wait(wrt);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; signal(mutex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;/*reading is performed*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; wait(mutex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; readcount--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (readcount == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; signal(wrt);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; signal(mutex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;Reader程序里包含了3个互斥锁，一个是和writer公用的wrt锁，2个是独有的mutex锁，相同互斥锁区域内，一次只能有一个线程在执行，所以reader在read的时候，writer就不能write，反之亦然。Reader前后的互斥锁保证只有一个reader线程在进入或者在出去，当readcount==0时，说明没有所有的reader都读完了，这时候发个signal让writer有机会进行write，如果writer在等待，那么就进去write了，wrt锁锁上，reader不能read。&lt;br&gt;考虑这么一种情况，read是很慢的一个动作，现在来了100个reader程序，它们一个个进入，都卡在了reading区域，writer想进去，但是得等待，好不容易等待第99个reader线程出来后，突然又来了101个线程开始read，writer只能继续等待，所以该方法不能解决starve问题&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;bounded-buffer问题&quot;&gt;&lt;a href=&quot;#bounded-buffer问题&quot; class=&quot;headerlink&quot; title=&quot;bounded buffer问题&quot;&gt;&lt;/a&gt;bounded buffer问题&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;一个
    
    </summary>
    
      <category term="Operating System" scheme="http://ShengtaoHou.github.io/categories/Operating-System/"/>
    
      <category term="线程管理" scheme="http://ShengtaoHou.github.io/categories/Operating-System/%E7%BA%BF%E7%A8%8B%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="Operating System" scheme="http://ShengtaoHou.github.io/tags/Operating-System/"/>
    
  </entry>
  
  <entry>
    <title>操作系统线程同步</title>
    <link href="http://ShengtaoHou.github.io/2016/12/16/OS%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/"/>
    <id>http://ShengtaoHou.github.io/2016/12/16/OS线程同步/</id>
    <published>2016-12-16T12:52:40.000Z</published>
    <updated>2016-12-22T18:34:14.566Z</updated>
    
    <content type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;不同线程同时对共享数据进行操作，可能会导致数据出现奇怪的结果&lt;br&gt;例如：producer-consumer问题&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Producer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(count==BUFFER_SIZE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	buffer[in]=nextProduced;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	In=(in+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)%BUFFER_SIZE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Consumer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(count==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	buffer[in]=nextProduced;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	In=(in+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)%BUFFER_SIZE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	count--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;count++与count–看起来是一步完成的，实际上是分为3部完成的，如count++在转为汇编语言时，是这样的：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;register=count；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;register=register+1；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;count=register&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;count–是这样的：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;register=count；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;register=register-1；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;count=register&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果同时执行count++，count–，那么这6句汇编程序将有多种排序方式，不同排列方式得到的结果不同，也就造成了一些奇怪的计算结果，解决的方法就是让count++， count–， 成为critical section，所谓的critical section，就是同一时刻，只能有一个线程执行的程序段，critical section的结构是：&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	entry section&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		critical section&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; section&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	remainder section&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;critical-section3大条件&quot;&gt;&lt;a href=&quot;#critical-section3大条件&quot; class=&quot;headerlink&quot; title=&quot;critical section3大条件&quot;&gt;&lt;/a&gt;critical section3大条件&lt;/h2&gt;&lt;p&gt;Critical section必须满足3个条件：&lt;br&gt;1 彼此互斥（mutual exclusion）&lt;br&gt;一个线程执行critical section的时候其他线程不能执行它们自己的critical section&lt;br&gt;2 有序推进（progress）&lt;br&gt;如果没有线程在执行critical section，同时有线程希望执行critical section,那么我们就必须明确的选择一个进入，不能无限期推迟&lt;br&gt;3 有限等待（bounded waiting）&lt;br&gt;在一个线程提出进入critical section的请求和最终请求被答应的这段等待时间里，其他线程进入critical section的次数是有一个上限的，不能我一直在等，你一直进去，无限制的进去&lt;/p&gt;
&lt;h2 id=&quot;peterson’s-solution&quot;&gt;&lt;a href=&quot;#peterson’s-solution&quot; class=&quot;headerlink&quot; title=&quot;peterson’s solution&quot;&gt;&lt;/a&gt;peterson’s solution&lt;/h2&gt;&lt;p&gt;是一种软件解决方案，可以解决2个线程的critical section问题&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	flag[i] = TRUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	turn = j;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ( flag[j] &amp;amp;&amp;amp; turn == j); &lt;span class=&quot;comment&quot;&gt;// you first&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		CRITICAL SECTION&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	flag[i] = FALSE; &lt;span class=&quot;comment&quot;&gt;// exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	REMAINDER SECTION&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (TRUE);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	flag[j] = TRUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	turn = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ( flag[i] &amp;amp;&amp;amp; turn == i); &lt;span class=&quot;comment&quot;&gt;// you first&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		CRITICAL SECTION&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	flag[j] = FALSE; &lt;span class=&quot;comment&quot;&gt;// exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	REMAINDER SECTION&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (TRUE);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;原理：开始的时候flag[i]和flag[j]都是true，turn等于i和j的其中一个，假设turn=i，那么Pj线程将会不断while循环，Pi则可以进入critical section，当Pi线程执行完critical section后，就会令flag[i]=false，使得Pj可以进入critical section。&lt;br&gt;Peterson’s solution满足了critical section的3个条件，局限是只能解决2个线程的问题，而且不能保证在现代计算机架构上运作。&lt;/p&gt;
&lt;p&gt;所有critical section问题都离不开lock&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Acquire lock&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Critical section&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Release lock&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Remainder section&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (TRUE)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;硬件&quot;&gt;&lt;a href=&quot;#硬件&quot; class=&quot;headerlink&quot; title=&quot;硬件&quot;&gt;&lt;/a&gt;硬件&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;在单处理器环境下，在执行critical section的时候将interrupt mask就好，等到critical section执行完毕，然后再enable interrupt，就能解决critical section问题。&lt;br&gt;在多处理器环境下，这样的方案行不通，因为处理器分散，信号传递消耗时间，由interrupt驱动的clock可能受到影响。&lt;br&gt;&amp;emsp;&amp;emsp;现代计算机提供了atomic hardware instruction，一个原子硬件指令是不可以中断的，用来解决critical section问题。&lt;/p&gt;
&lt;h3 id=&quot;TestAndSet&quot;&gt;&lt;a href=&quot;#TestAndSet&quot; class=&quot;headerlink&quot; title=&quot;TestAndSet&quot;&gt;&lt;/a&gt;TestAndSet&lt;/h3&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;boolean &lt;span class=&quot;title&quot;&gt;TestAndSet&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(boolean *target)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	boolean rv = *target;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	*target = TRUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return rv;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;作用是获取当前bool值，并将其修改为true&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ( TestAndSet (&amp;amp;lock) )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	; &lt;span class=&quot;comment&quot;&gt;// do nothing&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		critical section here&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	lock = FALSE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	remainder section here&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (TRUE);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;lock初始时=false,while 好比一扇门，critical section好比一个房间，lock=false的时候，门是开的，这个过程就好比：门刚开始是开的，线程进入门后，马上把门关掉，线程进入房间办事，办完后，把门打开。简单说:就是开门，关门，办事，开门的过程。&lt;/p&gt;
&lt;h3 id=&quot;swap&quot;&gt;&lt;a href=&quot;#swap&quot; class=&quot;headerlink&quot; title=&quot;swap&quot;&gt;&lt;/a&gt;swap&lt;/h3&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Swap&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(boolean *a, boolean *b)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	boolean temp = *a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	*a = *b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	*b = temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;解决方法：&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	key = TRUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (key == TRUE) Swap ( &amp;amp;lock, &amp;amp;key );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		critical section&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	lock = FALSE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	remainder section&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (TRUE);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;初始时，lock=false，只有lock=false的时候才能进门，lock是一次性用品，线程用完lock后就把lock=true，因此，其他线程就必须等待。&lt;/p&gt;
&lt;p&gt;TestAndSet, lock不能满足bounded waiting，以下方案可以满足全部3个条件&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Boolean waiting[n], lock;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	waiting[i] = TRUE; &lt;span class=&quot;comment&quot;&gt;// wish to acquire the lock&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	key = TRUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (waiting[i] &amp;amp;&amp;amp; key) key = TestandSet(&amp;amp;lock); &lt;span class=&quot;comment&quot;&gt;// try to acquire the lock&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	waiting[i] = FALSE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// ……critical section here…. //&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	j = (i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)%n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ( (j!= i) &amp;amp;&amp;amp; !waiting[j] ) j = (j+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)%n; &lt;span class=&quot;comment&quot;&gt;// keep locked and allow the next to come in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( j == i ) lock = FALSE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; waiting[j] = FALSE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// ……remainder section here…. //&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (TRUE);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;semaphore&quot;&gt;&lt;a href=&quot;#semaphore&quot; class=&quot;headerlink&quot; title=&quot;semaphore&quot;&gt;&lt;/a&gt;semaphore&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;有2种semaphore，一种是counting semaphore，一种是binary semaphore（mutex locks）&lt;br&gt;semaphore不一定要busy waiting，&lt;br&gt;使用busy waiting的semaphore：&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wait (S) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; S &amp;lt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// atomic for each iteration&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; &lt;span class=&quot;comment&quot;&gt;// no-op // iteration: if S&amp;gt;0, S--; else, no-op and test again&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;S--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;signal (S) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;S++; &lt;span class=&quot;comment&quot;&gt;// atomic&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;不使用busy waiting的semaphore：&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wait (S)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;value--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (value &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123; &lt;span class=&quot;comment&quot;&gt;// the value can be negative  # of processes waiting&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;add &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; process to the waiting &lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;/* suspend the process */&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Signal (S)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;value++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (value &amp;lt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;remove a process P from the waiting &lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;wakeup&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(P)&lt;/span&gt;&lt;/span&gt;; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;等待的线程采用FIFO policy放入PCB中，采用spinlock来确保wait和signal是原子性的，但是不能完全消去busy waiting，&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;不同线程同时对共享数据进行操作，可能会导致数据出现奇怪的结果&lt;br&gt;例如：producer-consumer问题&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Producer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(count==BUFFER_SIZE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	buffer[in]=nextProduced;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	In=(in+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)%BUFFER_SIZE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Consumer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(count==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	buffer[in]=nextProduced;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	In=(in+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)%BUFFER_SIZE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	count--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Operating System" scheme="http://ShengtaoHou.github.io/categories/Operating-System/"/>
    
      <category term="线程管理" scheme="http://ShengtaoHou.github.io/categories/Operating-System/%E7%BA%BF%E7%A8%8B%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="Operating System" scheme="http://ShengtaoHou.github.io/tags/Operating-System/"/>
    
      <category term="process synchronization" scheme="http://ShengtaoHou.github.io/tags/process-synchronization/"/>
    
  </entry>
  
  <entry>
    <title>浅谈操作系统虚拟内存</title>
    <link href="http://ShengtaoHou.github.io/2016/12/15/OS%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/"/>
    <id>http://ShengtaoHou.github.io/2016/12/15/OS虚拟内存/</id>
    <published>2016-12-15T13:09:45.000Z</published>
    <updated>2017-01-04T07:36:52.033Z</updated>
    
    <content type="html">&lt;p&gt;&amp;emsp;&amp;emsp;上篇讲到OS内存管理，方式是将整个program load到memory里，这么做浪费了memory空间，因为一个program里面有些程序是很少用到的，有些数组开了很大用的很少，所以，高效率的做法是将需要的page放到memory里面，平时我们玩大型游戏，十几G的游戏能在4G的内存运行良好，就是这么一个道理，虚拟内存，简单说，就是利用disk，当内存不够用时候，就把一部分进程踢到disk里面去，需要的时候，再从disk拿回来。&lt;br&gt;&amp;emsp;&amp;emsp;page table记录着一个page是否在physical memory里面，如果不在，就会发生page fault，OS就会从disk里面将需要的page load到physical memory里面，这个过程耗费时间，page fault rate越高，时间浪费的就越多，EAT（average access time）就越大。&lt;br&gt;&amp;emsp;&amp;emsp;假如我们采用了某种算法，选择了一个要被踢到disk的进程A，前脚踢出A，后脚又要用到A，于是又swap in进来，那么这么做是很低效的，频繁地swap in，swap out消耗了大量的时间。一个理想的情况是，我们把将来最不会用到进程swap out出去。可是，没人能够预测将来，所以，我们只能根据过去来预测将来，判断应该把谁swap out出去。&lt;br&gt;    &amp;emsp;&amp;emsp;决定应该swap out哪个进程到disk的policy有FIFO,LRU,random&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;FIFO：&quot;&gt;&lt;a href=&quot;#FIFO：&quot; class=&quot;headerlink&quot; title=&quot;FIFO：&quot;&gt;&lt;/a&gt;FIFO：&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;用一个queue记录进入内存的进程，进程进入内存后，enterqueue，要选择一个进程swap out出去时，就选择queue的头结点，也就是说：谁先进入，谁先出去，如果越早进入的也越少使用到，这种方法效率较高，可是，越早进入的也有可能经常用到，这会造成了一个奇怪的现象，当内存增大的时候，page fault rate还有可能增加&lt;/p&gt;
&lt;h2 id=&quot;LRU：&quot;&gt;&lt;a href=&quot;#LRU：&quot; class=&quot;headerlink&quot; title=&quot;LRU：&quot;&gt;&lt;/a&gt;LRU：&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;Least recent used选择最久没用到的进程swap out出去，有2种实现方法，1：是记录每个进程未被使用的时间，选择最久未被使用的进程swap out出去，2： 将每个使用过的进程压入stack，有再次用到这个进程，就把它从stack中取出，放到stack顶部。&lt;/p&gt;
&lt;h2 id=&quot;Random&quot;&gt;&lt;a href=&quot;#Random&quot; class=&quot;headerlink&quot; title=&quot;Random&quot;&gt;&lt;/a&gt;Random&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;随机选择一个在内存中的进程swap out出去&lt;/p&gt;
&lt;h2 id=&quot;copy-on-write&quot;&gt;&lt;a href=&quot;#copy-on-write&quot; class=&quot;headerlink&quot; title=&quot;copy on write&quot;&gt;&lt;/a&gt;copy on write&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;传统的fork()，执行后，parent process 和 child process share相同的若干个page，初始时每个page都是read only，当一个page发生write动作时，这个page就会复制成两份，也就是copy on write，这么做，有利于快速地创建process。与fork相反，vfork()没有使用copy on write，创建的child process直接在parents process的地址上运行，child process不能修改address space，如果改变的话，parent就会看到改动的page。&lt;/p&gt;
&lt;h2 id=&quot;allocation-of-frame&quot;&gt;&lt;a href=&quot;#allocation-of-frame&quot; class=&quot;headerlink&quot; title=&quot;allocation of frame&quot;&gt;&lt;/a&gt;allocation of frame&lt;/h2&gt;&lt;p&gt;global allocation：从所有空闲的frame选一个用&lt;br&gt;local allocation：只能选用process 本身的frame使用&lt;/p&gt;
&lt;h2 id=&quot;Thrashing&quot;&gt;&lt;a href=&quot;#Thrashing&quot; class=&quot;headerlink&quot; title=&quot;Thrashing&quot;&gt;&lt;/a&gt;Thrashing&lt;/h2&gt;&lt;p&gt;频繁地swap in，swap out。&lt;br&gt;当multiprogramming增加的时候，CPU使用率也会增加，可是当multiprogramming变得过多时，CPU使用率反而会因为Thrashing下降，此时，需要减少multiprogramming避免thrashing。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;上篇讲到OS内存管理，方式是将整个program load到memory里，这么做浪费了memory空间，因为一个program里面有些程序是很少用到的，有些数组开了很大用的很少，所以，高效率的做法是将需要的page放到memory里面，平时我们玩大型游戏，十几G的游戏能在4G的内存运行良好，就是这么一个道理，虚拟内存，简单说，就是利用disk，当内存不够用时候，就把一部分进程踢到disk里面去，需要的时候，再从disk拿回来。&lt;br&gt;&amp;emsp;&amp;emsp;page table记录着一个page是否在physical memory里面，如果不在，就会发生page fault，OS就会从disk里面将需要的page load到physical memory里面，这个过程耗费时间，page fault rate越高，时间浪费的就越多，EAT（average access time）就越大。&lt;br&gt;&amp;emsp;&amp;emsp;假如我们采用了某种算法，选择了一个要被踢到disk的进程A，前脚踢出A，后脚又要用到A，于是又swap in进来，那么这么做是很低效的，频繁地swap in，swap out消耗了大量的时间。一个理想的情况是，我们把将来最不会用到进程swap out出去。可是，没人能够预测将来，所以，我们只能根据过去来预测将来，判断应该把谁swap out出去。&lt;br&gt;    &amp;emsp;&amp;emsp;决定应该swap out哪个进程到disk的policy有FIFO,LRU,random
    
    </summary>
    
      <category term="Operating System" scheme="http://ShengtaoHou.github.io/categories/Operating-System/"/>
    
      <category term="内存管理" scheme="http://ShengtaoHou.github.io/categories/Operating-System/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="Operating System" scheme="http://ShengtaoHou.github.io/tags/Operating-System/"/>
    
      <category term="Virtual memory" scheme="http://ShengtaoHou.github.io/tags/Virtual-memory/"/>
    
  </entry>
  
  <entry>
    <title>OS内存管理</title>
    <link href="http://ShengtaoHou.github.io/2016/12/15/OS%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    <id>http://ShengtaoHou.github.io/2016/12/15/OS内存管理/</id>
    <published>2016-12-15T13:09:41.000Z</published>
    <updated>2017-01-03T13:59:35.413Z</updated>
    
    <content type="html">&lt;p&gt;浅谈操作系统内存管理&lt;/p&gt;
&lt;h2 id=&quot;连续内存分配&quot;&gt;&lt;a href=&quot;#连续内存分配&quot; class=&quot;headerlink&quot; title=&quot;连续内存分配&quot;&gt;&lt;/a&gt;连续内存分配&lt;/h2&gt;&lt;p&gt;我们每天都在run很多的进程，这些进程在内存中处在什么位置呢？我们该怎么样根据这些进程的逻辑地址对应到实际地址呢？这是操作系统要面对的一个问题。&lt;br&gt;直观的，我们会考虑把一个进程放入一段连续的内存中，一个进程就是一个整体，进程内部无内存空洞，进程和进程之间可能存在内存空洞，当进程run完后，它会释放占用的内存，这些被释放的内存也会形成了空洞&lt;br&gt;空洞的存在是对资源的浪费，为了充分利用这些内存空洞，我们考虑，将后续的进程填入这些空洞中，有三种填补方法：first fit, best fit, worse fit，first fit就是找到第一个能够放入的空洞，放入进程，best fit就是遍历所有的空洞，找到最合适的，所谓最合适，就是恰到好处，空洞长度比进程的长度长最小，worse fit与此相反，first fit速度最快，best fit内存利用率最高。&lt;br&gt;但是，尽管如此，内存还是会有很多的小洞（fragmentation）没办法被填满，平均情况下，会有三分一的内存被浪费了！怎么办？&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;解决方法1：&lt;br&gt;压缩法（compation）&lt;br&gt;把所有小空洞移动到一起，凑成一个大空洞，等待着被利用。这么做是有条件的，只有当relocation是dynamic的时候才可以。而且是在execution time的时候被实现的，此方法很慢，多数操作系统是使用paging。&lt;br&gt;解决方法2：&lt;br&gt;非连续内存分配paging&lt;br&gt;接下来让我们谈谈paging：&lt;/p&gt;
&lt;h2 id=&quot;Paging&quot;&gt;&lt;a href=&quot;#Paging&quot; class=&quot;headerlink&quot; title=&quot;Paging&quot;&gt;&lt;/a&gt;Paging&lt;/h2&gt;&lt;p&gt;Paging简单说就是把逻辑内存分成等长度的page，把物理内存分成很多很多个等长frame，每个frame大小是2的n次方，一个进程被分配到多个frame中，这些frame不是连续的。&lt;br&gt;每次执行进程都必须由提供的logical address找到对应的frame，进一步找到对应的的physical address。&lt;br&gt;假设一个进程用到了4个page：&lt;br&gt;&lt;img src=&quot;/images/os_paging_1.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;这些page通过page table对应到了不同的frmae上，一个page里面可以有好多个实体&lt;/p&gt;
&lt;p&gt;进一步的细看，假设page size是4 byte&lt;br&gt;&lt;img src=&quot;/images/os_paging_2.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;由logical得到page number和offset，page number通过page table转为对应的frame number，frame number+offset得到physical address&lt;/p&gt;
&lt;p&gt;例如：logical address 6（即g的位置）对应page 1，offset 3，page 1 对应frame 6，所以physical address=6x4+3=27（乘以4是因为frmae size=4）&lt;/p&gt;
&lt;p&gt;Paging的方法虽然可以充分利用memory，因为frame和frmae之间没有fragmentation，但是在frame内部却存在着fragmentation，比如说，在上图中，如果一个process的logical address是0-8，就需要frame1，frame5 frame6，其中frame1里面j k l未被利用，平均来说，每个process有0.5个page未被利用到，因此，我们希望page size能小些，但也不是越小越好，page size越小， page table就越大，浪费内存，我们希望page size有个合适的大小。当前，page size一般是介于4kb和8kb之间。有些CPU和kernel可以支持多种page size，比如solaris。&lt;br&gt;Page table entry（PTE）一般是4 byte（32bit），如果PTE是4byte，说明frame number可以到2^32（4GB）, frame size=4kb，那么physical address范围可以到16TB（4GB*4KB）&lt;/p&gt;
&lt;h3 id=&quot;Hardware-support&quot;&gt;&lt;a href=&quot;#Hardware-support&quot; class=&quot;headerlink&quot; title=&quot;Hardware support:&quot;&gt;&lt;/a&gt;Hardware support:&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/images/os_paging_3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;TLB(translation look-aside buffer)，小，快，但是贵，有64-1024个实体，如果page number在TLB里面，就可以根据TLB access memory，如果不在，则要先去memory 里面找page table，&lt;br&gt;假设TLB遍历的时间是20ns，memory access时间100ns，那么在TLB里面，20+100（memory access）=120ns，不在TLB里面，20+100（page table）+100（memory access）=220ns&lt;br&gt;Page number在TLB的概率称为hit ratio，80 percent的hit ratio，平均140ns，造成了40 percent的slow down（（140-100）/100=0.4）&lt;/p&gt;
&lt;h3 id=&quot;Protection&quot;&gt;&lt;a href=&quot;#Protection&quot; class=&quot;headerlink&quot; title=&quot;Protection&quot;&gt;&lt;/a&gt;Protection&lt;/h3&gt;&lt;p&gt;Page table多加一个valid位，用来表示某个page number是否合法，&lt;br&gt;图中的process的logical address space是0-10468，page size是2k，所以要用到0 1 2 3 4 5这6个page，于是6 7 page number就是invalid的，如果access这些invalid的page number，就会产生trap，&lt;br&gt;这么做有一个问题，logical address space 10468-12287是非法的，但是page number是合法的。&lt;br&gt;实际上一个process不会用到全部的logical address space，&lt;br&gt;&lt;img src=&quot;/images/os_paging_4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;Shared-page&quot;&gt;&lt;a href=&quot;#Shared-page&quot; class=&quot;headerlink&quot; title=&quot;Shared page&quot;&gt;&lt;/a&gt;Shared page&lt;/h3&gt;&lt;p&gt;比如我们平时用word软件，word软件就有各种编辑工具和文本。如果每开一个word窗口，都要给编辑工具重新开一个内存空间，简直就是浪费，编辑工具可以重用，文本占用不同的内存就好了：&lt;br&gt;&lt;img src=&quot;/images/os_paging_5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Structure-of-the-page-table&quot;&gt;&lt;a href=&quot;#Structure-of-the-page-table&quot; class=&quot;headerlink&quot; title=&quot;Structure of the page table&quot;&gt;&lt;/a&gt;Structure of the page table&lt;/h2&gt;&lt;p&gt;接下来来谈谈page table长什么样子，怎么实现page table，&lt;br&gt;Page table有三张实现方式：hierarchical paging，hash page table，inverter page table&lt;/p&gt;
&lt;h3 id=&quot;hierarchical-paging&quot;&gt;&lt;a href=&quot;#hierarchical-paging&quot; class=&quot;headerlink&quot; title=&quot;hierarchical paging&quot;&gt;&lt;/a&gt;hierarchical paging&lt;/h3&gt;&lt;p&gt;假设logical address space是4GB（2^32），page size是4KB（2^12），就需要2^20个page table entries，一个entries 4byte，就需要4M的物理地址来存这个table，如果有100个process，就需要400M的内存，浪费了大量内存资源。&lt;br&gt;存100需要100个格子，100=10 X 10，存2个10,就只需要20个格子。&lt;br&gt;逻辑地址是一个32bit数表示，这个32位数前20位等于page number的值，后12位等于offset，2^20个page number造成了巨大的table。把它切成两部分，前面10个bit一个table（1kb个entries）后面10个bit一个table（1kb个entries），那么一个process最多需要1KB+1KB X 1KB=1M的entries，看起来没有降低内存空间，但是每个inner page table只有1KB，找到1KB的连续空间要比1M的连续空间来的容易，而且是有用到才建立table，从而降低了占用的内存空间，&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/os_paging_6.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;VAX架构是32bit的逻辑地址，512byte的page size，逻辑地址分为4个section，2 bit的section，9 bit的offset，21 bit的page number，分成2层的page table比较合适&lt;br&gt;64位架构，如UltraSPARC需要7层tables，所以hierarchical paging不太合适。&lt;/p&gt;
&lt;h3 id=&quot;Hash-table&quot;&gt;&lt;a href=&quot;#Hash-table&quot; class=&quot;headerlink&quot; title=&quot;Hash table&quot;&gt;&lt;/a&gt;Hash table&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/images/os_paging_7.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;inverter-page-table&quot;&gt;&lt;a href=&quot;#inverter-page-table&quot; class=&quot;headerlink&quot; title=&quot;inverter page table&quot;&gt;&lt;/a&gt;inverter page table&lt;/h3&gt;&lt;p&gt;可以看做是物理地址的一个缩小版本，好比地图映射了世界，IPT映射了全部的物理地址。根据pid 在table遍历P，直到寻找到match的。增加了时间，减少了内存占用，可以用hash优化&lt;br&gt;&lt;img src=&quot;/images/os_paging_8.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Segmentation&quot;&gt;&lt;a href=&quot;#Segmentation&quot; class=&quot;headerlink&quot; title=&quot;Segmentation&quot;&gt;&lt;/a&gt;Segmentation&lt;/h2&gt;&lt;p&gt;将一个program看做是不同长度的segment，每个segment内部是连续的，segment之间不一定连续，segmentation方法介于paging和continuous之间，compiler将一个program分成code，data，heap，stack&lt;br&gt;Logical address ：&lt;segment number，=&quot;&quot; offset=&quot;&quot;&gt;&lt;br&gt;Segment table：&lt;base, limit=&quot;&quot;&gt;&lt;br&gt;-base（physical address起点）&lt;br&gt;-Limit（segment长度）&lt;/base,&gt;&lt;/segment&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/os_paging_9.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;• Relocation&lt;br&gt;– dynamic&lt;br&gt;– by segment table ( relocated by the base address)&lt;br&gt;• Sharing&lt;br&gt;– shared segments&lt;br&gt;– same segment number&lt;br&gt;• Allocation（和连续分配一样）&lt;br&gt;– first fit/best fit&lt;br&gt;– external fragmentation&lt;br&gt;• Protection&lt;br&gt;– each segment table entry associates read/write privileges&lt;/p&gt;
&lt;p&gt;例子：&lt;br&gt;IA-32&lt;br&gt;IntelIA-32同时使用了paging和segmentation，支持大page和小page，小page用2-level page&lt;/p&gt;
&lt;p&gt;内存超过4GB，传统的32bit地址只能寻址到4GB的空间，为了解决这个问题&lt;br&gt;Intel通过将PTE从20bit扩充到24bit，实现了36bit，64GB的寻址范围 &lt;/p&gt;
&lt;p&gt;Intel x86-64&lt;br&gt; Current generation Intel x86 architecture&lt;br&gt; 64 bits is ginormous (&amp;gt; 16 exabytes)&lt;br&gt; In practice only implement 48-bit addressing&lt;br&gt; Page sizes of 4 KB, 2 MB, 1 GB&lt;br&gt; Four levels of paging hierarchy&lt;br&gt; Can also use PAE so virtual&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;浅谈操作系统内存管理&lt;/p&gt;
&lt;h2 id=&quot;连续内存分配&quot;&gt;&lt;a href=&quot;#连续内存分配&quot; class=&quot;headerlink&quot; title=&quot;连续内存分配&quot;&gt;&lt;/a&gt;连续内存分配&lt;/h2&gt;&lt;p&gt;我们每天都在run很多的进程，这些进程在内存中处在什么位置呢？我们该怎么样根据这些进程的逻辑地址对应到实际地址呢？这是操作系统要面对的一个问题。&lt;br&gt;直观的，我们会考虑把一个进程放入一段连续的内存中，一个进程就是一个整体，进程内部无内存空洞，进程和进程之间可能存在内存空洞，当进程run完后，它会释放占用的内存，这些被释放的内存也会形成了空洞&lt;br&gt;空洞的存在是对资源的浪费，为了充分利用这些内存空洞，我们考虑，将后续的进程填入这些空洞中，有三种填补方法：first fit, best fit, worse fit，first fit就是找到第一个能够放入的空洞，放入进程，best fit就是遍历所有的空洞，找到最合适的，所谓最合适，就是恰到好处，空洞长度比进程的长度长最小，worse fit与此相反，first fit速度最快，best fit内存利用率最高。&lt;br&gt;但是，尽管如此，内存还是会有很多的小洞（fragmentation）没办法被填满，平均情况下，会有三分一的内存被浪费了！怎么办？
    
    </summary>
    
      <category term="Operating System" scheme="http://ShengtaoHou.github.io/categories/Operating-System/"/>
    
      <category term="内存管理" scheme="http://ShengtaoHou.github.io/categories/Operating-System/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="Operating System" scheme="http://ShengtaoHou.github.io/tags/Operating-System/"/>
    
      <category term="memory" scheme="http://ShengtaoHou.github.io/tags/memory/"/>
    
  </entry>
  
  <entry>
    <title>NexT主题配置</title>
    <link href="http://ShengtaoHou.github.io/2016/12/15/NexT%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/"/>
    <id>http://ShengtaoHou.github.io/2016/12/15/NexT主题配置/</id>
    <published>2016-12-15T09:31:24.000Z</published>
    <updated>2016-12-16T10:52:30.577Z</updated>
    
    <content type="html">&lt;h2 id=&quot;菜单设置&quot;&gt;&lt;a href=&quot;#菜单设置&quot; class=&quot;headerlink&quot; title=&quot;菜单设置&quot;&gt;&lt;/a&gt;菜单设置&lt;/h2&gt;&lt;p&gt;以添加about为例&lt;br&gt;&lt;strong&gt;第一步&lt;/strong&gt;&lt;br&gt;运行命令：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo new page &amp;quot;about&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第二步&lt;/strong&gt;&lt;br&gt;打开&lt;code&gt;D:\GitHub\hexo\source\about\index.md&lt;/code&gt;&lt;br&gt;修改为：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;title: about&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2016-12-15 18:07:50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type: about&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;comments: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第三步&lt;/strong&gt;&lt;br&gt;打开next主题配置文件&lt;br&gt;去掉about前面的注释&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;menu:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  home: /&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  categories: /categories&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  about: /about&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  archives: /archives&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  tags: /tags&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;字体设置&quot;&gt;&lt;a href=&quot;#字体设置&quot; class=&quot;headerlink&quot; title=&quot;字体设置&quot;&gt;&lt;/a&gt;字体设置&lt;/h2&gt;&lt;p&gt;打开&lt;code&gt;D:\GitHub\hexo\themes\next\source\css\_variables\custom.styl&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;插入代码：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$font-size-base = &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;px; &lt;span class=&quot;comment&quot;&gt;// 默认是 16px 大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$font-family-headings = &lt;span class=&quot;string&quot;&gt;&quot;Microsoft YaHei&quot;&lt;/span&gt;, Verdana, sans-serif &lt;span class=&quot;comment&quot;&gt;// 标题，修改成你期望的字体族&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$font-family-base = &lt;span class=&quot;string&quot;&gt;&quot;Microsoft YaHei&quot;&lt;/span&gt;, Verdana, sans-serif &lt;span class=&quot;comment&quot;&gt;// 修改成你期望的字体族&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;修改code底纹&lt;br&gt;markdown用2个反引号将句子括起来，这个句子就加上了底纹，NexT默认底纹颜色和代码块颜色一样，修改&lt;code&gt;D:\GitHub\hexo\themes\next\source\css\_common\components\highlight\hightlight.styl&lt;/code&gt;设置底纹颜色：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;code &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  padding: 2px 4px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  word-wrap: break-word;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  color: #000;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  background: #eee;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  border-radius: $code-border-radius;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  font-size $code-font-size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;访问量设置&quot;&gt;&lt;a href=&quot;#访问量设置&quot; class=&quot;headerlink&quot; title=&quot;访问量设置&quot;&gt;&lt;/a&gt;访问量设置&lt;/h2&gt;&lt;p&gt;打开&lt;code&gt;D:\GitHub\hexo\themes\next\layout\_layout.swig&lt;/code&gt;&lt;br&gt;在末尾加入：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; src=&lt;span class=&quot;string&quot;&gt;&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&lt;/span&gt;&amp;gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;本站总访问量 &amp;lt;span id=&lt;span class=&quot;string&quot;&gt;&quot;busuanzi_value_site_pv&quot;&lt;/span&gt;&amp;gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; &amp;amp;nbsp&amp;amp;nbsp&amp;amp;nbsp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;您是第&amp;lt;span id=&lt;span class=&quot;string&quot;&gt;&quot;busuanzi_value_site_uv&quot;&lt;/span&gt;&amp;gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;个来到的小伙伴&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% block footer %&amp;#125;&amp;#123;% endblock %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;单页访问量设置&quot;&gt;&lt;a href=&quot;#单页访问量设置&quot; class=&quot;headerlink&quot; title=&quot;单页访问量设置&quot;&gt;&lt;/a&gt;单页访问量设置&lt;/h2&gt;&lt;p&gt;需要修改3个文件的配置&lt;br&gt;1&amp;gt;修改themes/next/layout/_macro目录下的post.swig文件&lt;br&gt;位于文件开头,在第三个参数的位置，增加is_pv字段&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% macro render(post, is_index, is_pv, post_extra_class) %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;寻找插入位置：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% if post.comments %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#123;% if (theme.duoshuo and theme.duoshuo.shortname) or theme.duoshuo_shortname %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;post-comments-count&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;amp;nbsp; | &amp;amp;nbsp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;&amp;#123; url_for(post.path) &amp;#125;&amp;#125;#comments&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;itemprop&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;discussionUrl&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;post-comments-count ds-thread-count&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-thread-key&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;&amp;#123; post.path &amp;#125;&amp;#125;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;itemprop&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;commentsCount&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#123;% elseif theme.disqus_shortname %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;post-comments-count&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;nbsp; | &amp;amp;nbsp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;&amp;#123; url_for(post.path) &amp;#125;&amp;#125;#comments&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;itemprop&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;discussionUrl&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;post-comments-count disqus-comment-count&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-disqus-identifier&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;&amp;#123; post.path &amp;#125;&amp;#125;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;itemprop&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;commentsCount&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#123;% endif %&amp;#125;      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;% endif %&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	#插入到这里&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;header&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;插入以下代码，用于区分文章页面跟首页&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% if is_pv %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;nbsp; | &amp;amp;nbsp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;busuanzi_value_page_pv&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;次阅读&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% endif %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2&amp;gt;修改themes/next/layout目录下的post.swig文件&lt;br&gt;这个文件是文章的模板&lt;br&gt;找到以下代码，给render方法传入刚才第一步中设置的参数。&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% block content %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;posts&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;posts-expand&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	#render方法第二个参数is_index为是否为首页&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	#第三个参数is_pv为我们刚才设置的是否显示计数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&amp;#123; post_template.render(page, false, true) &amp;#125;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;post-spread&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#123;% if theme.jiathis %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;% include &#39;_partials/share/jiathis.swig&#39; %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#123;% elseif theme.duoshuo_shortname and theme.duoshuo_share %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;% include &#39;_partials/share/duoshuo_share.swig&#39; %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#123;% endif %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% endblock %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3&amp;gt;修改themes/next/layout目录下的index.swig文件&lt;br&gt;这个文件是首页的模板&lt;br&gt;找到以下代码，给render方法传入刚才第一步中设置的参数。&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% block content %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;posts&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;posts-expand&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;% for post in page.posts %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       #render方法第二个参数is_index为是否为首页&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       #第三个参数is_pv为我们刚才设置的是否显示计数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#123;&amp;#123; post_template.render(post, true, false) &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;% endfor %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;section&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;% include &#39;_partials/pagination.swig&#39; %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% endblock %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;至此，我们的站点计数功能就做好了~&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;菜单设置&quot;&gt;&lt;a href=&quot;#菜单设置&quot; class=&quot;headerlink&quot; title=&quot;菜单设置&quot;&gt;&lt;/a&gt;菜单设置&lt;/h2&gt;&lt;p&gt;以添加about为例&lt;br&gt;&lt;strong&gt;第一步&lt;/strong&gt;&lt;br&gt;运行命令：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo new page &amp;quot;about&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第二步&lt;/strong&gt;&lt;br&gt;打开&lt;code&gt;D:\GitHub\hexo\source\about\index.md&lt;/code&gt;&lt;br&gt;修改为：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;title: about&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2016-12-15 18:07:50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type: about&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;comments: false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第三步&lt;/strong&gt;&lt;br&gt;打开next主题配置文件&lt;br&gt;去掉about前面的注释&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;menu:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  home: /&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  categories: /categories&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  about: /about&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  archives: /archives&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  tags: /tags&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://ShengtaoHou.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://ShengtaoHou.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>最小生成树问题</title>
    <link href="http://ShengtaoHou.github.io/2016/12/15/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%E9%97%AE%E9%A2%98/"/>
    <id>http://ShengtaoHou.github.io/2016/12/15/最小生成树问题/</id>
    <published>2016-12-15T04:32:03.000Z</published>
    <updated>2016-12-22T18:41:19.980Z</updated>
    
    <content type="html">&lt;h2 id=&quot;最小生成树之Kruskal算法&quot;&gt;&lt;a href=&quot;#最小生成树之Kruskal算法&quot; class=&quot;headerlink&quot; title=&quot;最小生成树之Kruskal算法&quot;&gt;&lt;/a&gt;最小生成树之Kruskal算法&lt;/h2&gt;&lt;p&gt;用Kruskal方法解决无向连通图最小生成树问题：&lt;/p&gt;
&lt;p&gt;1所有的点初始化的时候自成一个集合&lt;/p&gt;
&lt;p&gt;2所有的边按照权值大小，从小到大排序&lt;/p&gt;
&lt;p&gt;3选取权值小的边加入现有集合中，且加入后必须不构成环路，加入后，记录点的祖先&lt;/p&gt;
&lt;p&gt;4重复步骤3，直到所有的点都被放入一个集合中&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;desription:use Kruskal method to solve mini span tree problem&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;copyright:Hou Shengtao&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;data:2016/12/7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; max 100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; INF 999&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; edge_num,vertex_num;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; p[max];&lt;span class=&quot;comment&quot;&gt;//record SET ID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; edge&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; w;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;e[max];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i,j;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;i&amp;lt;edge_num;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        j=i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x=e[i].w;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; aa=e[i].a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; bb=e[i].b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(j&amp;gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;amp;&amp;amp;e[j].w&amp;gt;x)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e[j+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].a=e[j].a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e[j+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].b=e[j].b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e[j+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].w=e[j].w;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            j--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        e[j+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].a=aa;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        e[j+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].b=bb;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        e[j+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].w=x;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//find() use to find the ancester node&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return x==p[x]?x:(p[x]=find(p[x])); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//unioned() use to pass the ancester ID to its children&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//so that all the mini tree vertex have the same ID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;unioned&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; y)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    p[find(x)]=find(y);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Kruskal&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//init&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i,j;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;vertex_num;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p[i]=i;&lt;span class=&quot;comment&quot;&gt;//init the SET ID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//sorting according to edge&#39;s weight&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sort();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,j=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;vertex_num&amp;amp;&amp;amp;j&amp;lt;edge_num;i++,j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(find(e[j].a)==find(e[j].b))&lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//form circle,skip&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        unioned(e[j].a,e[j].b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;start:%d end:%d weight:%d\n&quot;&lt;/span&gt;,e[j].a,e[j].b,e[j].w);    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FILE *fin  = fopen (&lt;span class=&quot;string&quot;&gt;&quot;mst.in&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;r&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FILE *fout = fopen (&lt;span class=&quot;string&quot;&gt;&quot;mst.out&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;w&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; buf[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fgets(buf,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,fin);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    edge_num=atoi(buf);    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fgets(buf,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,fin);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    vertex_num=atoi(buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;edge_num:%d\n&quot;&lt;/span&gt;,edge_num);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;vertex_num:%d\n&quot;&lt;/span&gt;,vertex_num);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;edge_num;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; start,end,weight;&lt;span class=&quot;comment&quot;&gt;//start point,end point and the weight of edge&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fgets(buf,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,fin);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;sscanf&lt;/span&gt;(buf,&lt;span class=&quot;string&quot;&gt;&quot;%d %d %d&quot;&lt;/span&gt;,&amp;amp;start,&amp;amp;end,&amp;amp;weight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;start:%d end:%d weight:%d\n&quot;&lt;/span&gt;,start,end,weight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        e[i].a=start;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        e[i].b=end;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        e[i].w=weight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Kruskal();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;最小生成树之Kruskal算法&quot;&gt;&lt;a href=&quot;#最小生成树之Kruskal算法&quot; class=&quot;headerlink&quot; title=&quot;最小生成树之Kruskal算法&quot;&gt;&lt;/a&gt;最小生成树之Kruskal算法&lt;/h2&gt;&lt;p&gt;用Kruskal方法解决无向连通图最小生成树问题：&lt;/p&gt;
&lt;p&gt;1所有的点初始化的时候自成一个集合&lt;/p&gt;
&lt;p&gt;2所有的边按照权值大小，从小到大排序&lt;/p&gt;
&lt;p&gt;3选取权值小的边加入现有集合中，且加入后必须不构成环路，加入后，记录点的祖先&lt;/p&gt;
&lt;p&gt;4重复步骤3，直到所有的点都被放入一个集合中&lt;br&gt;
    
    </summary>
    
      <category term="algorithm" scheme="http://ShengtaoHou.github.io/categories/algorithm/"/>
    
      <category term="graph theory" scheme="http://ShengtaoHou.github.io/categories/algorithm/graph-theory/"/>
    
    
      <category term="algorithm" scheme="http://ShengtaoHou.github.io/tags/algorithm/"/>
    
      <category term="graph theory" scheme="http://ShengtaoHou.github.io/tags/graph-theory/"/>
    
  </entry>
  
  <entry>
    <title>单源多源最短路问题</title>
    <link href="http://ShengtaoHou.github.io/2016/12/15/%E6%9C%80%E7%9F%AD%E8%B7%AF%E9%97%AE%E9%A2%98/"/>
    <id>http://ShengtaoHou.github.io/2016/12/15/最短路问题/</id>
    <published>2016-12-15T04:31:38.000Z</published>
    <updated>2017-01-04T12:52:39.743Z</updated>
    
    <content type="html">&lt;h2 id=&quot;单源最短路问题&quot;&gt;&lt;a href=&quot;#单源最短路问题&quot; class=&quot;headerlink&quot; title=&quot;单源最短路问题&quot;&gt;&lt;/a&gt;单源最短路问题&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;如果源点可达负环，那么不存在最短路，源点不可达负环路，存在最短路。&lt;br&gt;&amp;emsp;&amp;emsp;最短路的子路仍然是最短路，可用反证法证明。&lt;br&gt;&amp;emsp;&amp;emsp;最短路不能包含环，因为负环导致负无穷，正环，去掉环后更短。&lt;br&gt;&amp;emsp;&amp;emsp;所有最短路问题都少不了初始化：&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;INIT-SINGLE-SOURCE (V, s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	For each v ∈ V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; d [v] ← ∞&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	            π[v] ← NIL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	d [s] ← &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;relax操作：如果从s到u，再从u到v的路径比直接从s到v更短，那么d[v]=d[u]+W(u,v)&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RELAX (u , v , w )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	If d [v] &amp;gt; d [u]+ w(u, v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      then d [v] ← d [u] + w ( u, v )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		π [v] ← u&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;所有单源最短路算法都是INIT-SINGLE-SOURCE后进行relax操作，区别在于relax的次序和次数。&lt;br&gt;&amp;emsp;&amp;emsp;在进行relax操作后，有以下性质：&lt;br&gt;1 三角不等式(Triangle inequality)&lt;br&gt;    δ(s, v) ≤ δ(s, u) + w(u, v)&lt;/p&gt;
&lt;p&gt;2 Upper bound property&lt;br&gt;    Always have d [v] ≥ δ(s, v) for all v.&lt;br&gt;    Once d [v] = δ(s, v), it never changes&lt;/p&gt;
&lt;p&gt;3 No-path property&lt;br&gt;    If δ(s, v) = ∞, then d [v] = ∞ always.&lt;/p&gt;
&lt;p&gt;4 Convergence property&lt;br&gt;    If s       u → v is a shortest path, d [u] =δ(s, u), and we call RELAX(u, v, w), then d [v] = δ(s, v) afterward.&lt;/p&gt;
&lt;p&gt;5 Path relaxation property&lt;/p&gt;
&lt;h3 id=&quot;Bellman-Ford算法解决单源最短路问题&quot;&gt;&lt;a href=&quot;#Bellman-Ford算法解决单源最短路问题&quot; class=&quot;headerlink&quot; title=&quot;Bellman-Ford算法解决单源最短路问题&quot;&gt;&lt;/a&gt;Bellman-Ford算法解决单源最短路问题&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;n个节点，做n-1次循环，每次循环，都对&lt;code&gt;所有边&lt;/code&gt;做一次relax操作。有可达负环，说明最短路不存在，返回false&lt;br&gt;&amp;emsp;&amp;emsp;时间复杂度: Θ(VE).&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;BELLMAN-FORD (V, E, w, s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	INIT-SINGLE-SOURCE (V, s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for i ← 1 to |V | - 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      do for each edge (u, v) ∈ E&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	                do RELAX (u, v, w)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for each edge (u , v) ∈ E&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      do if d [v] &amp;gt; d [u] + w(u, v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	                     then return FALSE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return TRUE&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;有向无环图单源最短路径&quot;&gt;&lt;a href=&quot;#有向无环图单源最短路径&quot; class=&quot;headerlink&quot; title=&quot;有向无环图单源最短路径&quot;&gt;&lt;/a&gt;有向无环图单源最短路径&lt;/h3&gt;&lt;p&gt;拓扑排序，然后按照排序结果顺序做relax操作。&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;DAG-SHORTEST-PATHS (V, E, w, s)                       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;topologically sort the vertices&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	INIT-SINGLE-SOURCE (V, s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; each vertex u, taken in topologically sorted order&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; each vertex v ∈ Adj [u]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RELAX&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(u, v, w)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;时间复杂度:Θ(V  + E )&lt;/p&gt;
&lt;h3 id=&quot;Dijkstra算法&quot;&gt;&lt;a href=&quot;#Dijkstra算法&quot; class=&quot;headerlink&quot; title=&quot;Dijkstra算法&quot;&gt;&lt;/a&gt;Dijkstra算法&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;Dijkstra算法可以解决源点到任意点的最短距离并输出最短路径，条件是图不能包含负边，如果图全是正边，把每个点当做源点，计算一次最短路，就能得到任意两点之间的最短路，如果图包含负边，经过Johnson Algorithm改良，可以计算任意两点最短路径。&lt;/p&gt;
&lt;p&gt;准备：&lt;/p&gt;
&lt;p&gt;建立一个距离数组d[ n ]，记录每个点到源点的距离是多少&lt;br&gt;建立一个访问数组v[ n ]，记录每个点是否被访问到&lt;br&gt;建立一个祖先数组p[ n ]，记录每个节点的父亲节点是什么&lt;br&gt;选择一个起始点s&lt;/p&gt;
 &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;执行：&lt;/p&gt;
&lt;p&gt;1初始化：所有点到源点的距离都是无穷大&lt;/p&gt;
&lt;p&gt;2访问源点，源点到源点的距离变为0，更新与源点相邻的点的距离数组（等于边的权值）&lt;/p&gt;
&lt;p&gt;3加入距离最小的点到已访问集合，更新与已访问集合连接的点的距离数组（=min{ 直接距离, 间接距离}）以及更新祖先节点数组p[ n ]&lt;/p&gt;
&lt;p&gt;4重复步骤3，直到寻找到终点或者访问完所有节点&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;DIJKSTRA (V, E, w, s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	INIT-SINGLE-SOURCE (V, s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	S ← Ø&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Q ← V           &lt;span class=&quot;comment&quot;&gt;//  i.e., insert all vertices into Q&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	While Q ≠ Ø&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	     &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; u ← EXTRACT-MIN(Q) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	           S ← S U &amp;#123;u&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	           &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; each vertex v ∈ Adj [u]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	               &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RELAX&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(u, v, w)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;DIJKSTRA算法用到了优先队列，binary heap时间复杂度：O (E lg V)，使用斐波那契heap，可以优化时间复杂度：O ( V lg V + E )。&lt;/p&gt;
&lt;h3 id=&quot;dij解不等式组&quot;&gt;&lt;a href=&quot;#dij解不等式组&quot; class=&quot;headerlink&quot; title=&quot;dij解不等式组&quot;&gt;&lt;/a&gt;dij解不等式组&lt;/h3&gt;&lt;h2 id=&quot;多源最短路问题&quot;&gt;&lt;a href=&quot;#多源最短路问题&quot; class=&quot;headerlink&quot; title=&quot;多源最短路问题&quot;&gt;&lt;/a&gt;多源最短路问题&lt;/h2&gt;&lt;h3 id=&quot;APSP&quot;&gt;&lt;a href=&quot;#APSP&quot; class=&quot;headerlink&quot; title=&quot;APSP&quot;&gt;&lt;/a&gt;APSP&lt;/h3&gt;&lt;p&gt;从i出发，经过m条边，最终到达j的最短路径 等于 所有从i出发经过m-1条边到达k，再从k到达j的最小情况。&lt;br&gt;特殊的矩阵运算，+ 变成 min，x 变成 +&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;EXTEND(L, W, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;create L’, an n×n matrix&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i←&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; to n &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j ←&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; to n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; k ←&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; to n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                           &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return L’&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;时间复杂度：O-n4&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SLOW-APSP(W, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;L(1) ←W&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for m ←2 to n-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      do L(m) ← EXTEND(L(m-1), W, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return L(n-1)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;时间复杂度：O-n3lgn&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;FASTER-APSP(W, n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;L(1) ← W&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m ←1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;while m &amp;lt; n-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         do L(2m) ← EXTEND(L(m), L(m), n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              m ←2m&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return L(m)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;Floyd-Warshall算法&quot;&gt;&lt;a href=&quot;#Floyd-Warshall算法&quot; class=&quot;headerlink&quot; title=&quot;Floyd-Warshall算法&quot;&gt;&lt;/a&gt;Floyd-Warshall算法&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;Floyd-Warshall算法是解决任意两点间的最短路径的一种算法，可以正确处理有向图或负权（但不可存在负权回路)的最短路径问题，同时也被用于计算有向图的传递闭包。&lt;/p&gt;
&lt;p&gt;Floyd-Warshall算法的时间复杂度为O-(N^3)，空间复杂度为O(N^2)。&lt;/p&gt;
&lt;p&gt;Floyd-Warshall算法的原理是动态规划：&lt;/p&gt;
&lt;p&gt;考虑一个顶点集合dk 1,2,3，···k，对于两个顶点i和j，从i到j有一条最短路径p，如果p不经过k，那么顶点集合dk中从i到j的最短路径实际上等于顶点集合dk-1从i到j的最短路径。&lt;br&gt;如果p有经过k，那么顶点集合dk从i到j的最短路径，实际上等同于dk-1顶点集合从i到k，再在顶点集合dk-1从k到j的最短路径之和。&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Floyd&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i,j,k;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;vertex_num;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(j=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;j&amp;lt;vertex_num;j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            d[i][j]=graph[i][j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            p[i][j]=&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(k=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;k&amp;lt;vertex_num;k++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;vertex_num;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(j=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;j&amp;lt;vertex_num;j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(d[i][j]&amp;gt;d[i][k]+d[k][j])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    d[i][j]=d[i][k]+d[k][j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    p[i][j]=k;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;传递闭包问题&quot;&gt;&lt;a href=&quot;#传递闭包问题&quot; class=&quot;headerlink&quot; title=&quot;传递闭包问题&quot;&gt;&lt;/a&gt;传递闭包问题&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;从i可以到k，从k可以到j，那么从i也可以到j，于是添加i到j的边，这就是传递闭包。&lt;br&gt;解法：每条边权值1，run Floyd-Warshall算法如果dij&amp;lt;n，说明有i到j的路径，否则，没有路径。&lt;/p&gt;
&lt;p&gt;更简单的方法：矩阵运算min改成或，+改成且。&lt;/p&gt;
&lt;h3 id=&quot;多源最短路径问题Johnson算法&quot;&gt;&lt;a href=&quot;#多源最短路径问题Johnson算法&quot; class=&quot;headerlink&quot; title=&quot;多源最短路径问题Johnson算法&quot;&gt;&lt;/a&gt;多源最短路径问题Johnson算法&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;稀疏图使用dij算法要优于floy算法，可惜的是dij只适用于正权边，Johnson算法是改进版的dij算法，改变所有边的权值，使得负权值的边不存在，然后，利用dij算法求解。Johnson算法的灵魂在于如何reweighting。&lt;br&gt;&amp;emsp;&amp;emsp;reweighting后必须满足2个性质。&lt;br&gt;1 最短路不变&lt;br&gt;2 所有新的权值都为正数&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;重新赋权的方法就是每条边新权值等于旧权值+尾节点值减去头节点的值，&lt;br&gt;每个节点的值由DIJ解不等式方法来确定。&lt;br&gt;&amp;emsp;&amp;emsp;时间复杂度：O(V2lgV + VE).&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;单源最短路问题&quot;&gt;&lt;a href=&quot;#单源最短路问题&quot; class=&quot;headerlink&quot; title=&quot;单源最短路问题&quot;&gt;&lt;/a&gt;单源最短路问题&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;如果源点可达负环，那么不存在最短路，源点不可达负环路，存在最短路。&lt;br&gt;&amp;emsp;&amp;emsp;最短路的子路仍然是最短路，可用反证法证明。&lt;br&gt;&amp;emsp;&amp;emsp;最短路不能包含环，因为负环导致负无穷，正环，去掉环后更短。&lt;br&gt;&amp;emsp;&amp;emsp;所有最短路问题都少不了初始化：&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;INIT-SINGLE-SOURCE (V, s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	For each v ∈ V&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; d [v] ← ∞&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	            π[v] ← NIL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	d [s] ← &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;relax操作：如果从s到u，再从u到v的路径比直接从s到v更短，那么d[v]=d[u]+W(u,v)&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RELAX (u , v , w )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	If d [v] &amp;gt; d [u]+ w(u, v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      then d [v] ← d [u] + w ( u, v )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		π [v] ← u&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;所有单源最短路算法都是INIT-SINGLE-SOURCE后进行relax操作，区别在于relax的次序和次数。&lt;br&gt;&amp;emsp;&amp;emsp;在进行relax操作后，有以下性质：&lt;br&gt;1 三角不等式(Triangle inequality)&lt;br&gt;    δ(s, v) ≤ δ(s, u) + w(u, v)&lt;/p&gt;
&lt;p&gt;2 Upper bound property&lt;br&gt;    Always have d [v] ≥ δ(s, v) for all v.&lt;br&gt;    Once d [v] = δ(s, v), it never changes&lt;/p&gt;
&lt;p&gt;3 No-path property&lt;br&gt;    If δ(s, v) = ∞, then d [v] = ∞ always.&lt;/p&gt;
&lt;p&gt;4 Convergence property&lt;br&gt;    If s       u → v is a shortest path, d [u] =δ(s, u), and we call RELAX(u, v, w), then d [v] = δ(s, v) afterward.&lt;/p&gt;
&lt;p&gt;5 Path relaxation property&lt;/p&gt;
&lt;h3 id=&quot;Bellman-Ford算法解决单源最短路问题&quot;&gt;&lt;a href=&quot;#Bellman-Ford算法解决单源最短路问题&quot; class=&quot;headerlink&quot; title=&quot;Bellman-Ford算法解决单源最短路问题&quot;&gt;&lt;/a&gt;Bellman-Ford算法解决单源最短路问题&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;n个节点，做n-1次循环，每次循环，都对&lt;code&gt;所有边&lt;/code&gt;做一次relax操作。有可达负环，说明最短路不存在，返回false&lt;br&gt;&amp;emsp;&amp;emsp;时间复杂度: Θ(VE).&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;BELLMAN-FORD (V, E, w, s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	INIT-SINGLE-SOURCE (V, s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for i ← 1 to |V | - 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      do for each edge (u, v) ∈ E&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	                do RELAX (u, v, w)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for each edge (u , v) ∈ E&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      do if d [v] &amp;gt; d [u] + w(u, v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	                     then return FALSE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return TRUE&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;有向无环图单源最短路径&quot;&gt;&lt;a href=&quot;#有向无环图单源最短路径&quot; class=&quot;headerlink&quot; title=&quot;有向无环图单源最短路径&quot;&gt;&lt;/a&gt;有向无环图单源最短路径&lt;/h3&gt;&lt;p&gt;拓扑排序，然后按照排序结果顺序做relax操作。&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;DAG-SHORTEST-PATHS (V, E, w, s)                       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;topologically sort the vertices&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	INIT-SINGLE-SOURCE (V, s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; each vertex u, taken in topologically sorted order&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; each vertex v ∈ Adj [u]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RELAX&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(u, v, w)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;时间复杂度:Θ(V  + E )&lt;/p&gt;
&lt;h3 id=&quot;Dijkstra算法&quot;&gt;&lt;a href=&quot;#Dijkstra算法&quot; class=&quot;headerlink&quot; title=&quot;Dijkstra算法&quot;&gt;&lt;/a&gt;Dijkstra算法&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;Dijkstra算法可以解决源点到任意点的最短距离并输出最短路径，条件是图不能包含负边，如果图全是正边，把每个点当做源点，计算一次最短路，就能得到任意两点之间的最短路，如果图包含负边，经过Johnson Algorithm改良，可以计算任意两点最短路径。&lt;/p&gt;
&lt;p&gt;准备：&lt;/p&gt;
&lt;p&gt;建立一个距离数组d[ n ]，记录每个点到源点的距离是多少&lt;br&gt;建立一个访问数组v[ n ]，记录每个点是否被访问到&lt;br&gt;建立一个祖先数组p[ n ]，记录每个节点的父亲节点是什么&lt;br&gt;选择一个起始点s&lt;/p&gt;
    
    </summary>
    
      <category term="algorithm" scheme="http://ShengtaoHou.github.io/categories/algorithm/"/>
    
      <category term="graph theory" scheme="http://ShengtaoHou.github.io/categories/algorithm/graph-theory/"/>
    
    
      <category term="algorithm" scheme="http://ShengtaoHou.github.io/tags/algorithm/"/>
    
      <category term="graph theory" scheme="http://ShengtaoHou.github.io/tags/graph-theory/"/>
    
  </entry>
  
  <entry>
    <title>最长公共子序列</title>
    <link href="http://ShengtaoHou.github.io/2016/12/15/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/"/>
    <id>http://ShengtaoHou.github.io/2016/12/15/最长公共子序列/</id>
    <published>2016-12-15T04:31:09.000Z</published>
    <updated>2016-12-22T18:39:45.559Z</updated>
    
    <content type="html">&lt;p&gt;最长公共子序列问题(longest common subsequence problem)描述的是：&lt;/p&gt;
&lt;p&gt;给你两个字符串str1和str2，它们之间可能存在公有子序列，子序列和子串的区别是：子序列不要求连续，只需要按照顺序出现就好，子串则要求连续：&lt;br&gt;例如：SIMPLE和NAIVE有共同的子序列IE，但是没有共同的子串。&lt;br&gt;      TOO SIMPLE和TOO YOUNG则有共同子串TOO&lt;/p&gt;
&lt;p&gt;LCS问题就是(1)求出最长公有子序列的长度(2)求出最长公有子序列。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;(1) 求出最长公有子序列的长度&lt;br&gt;解法考虑动态规划，用一个二维数组L [m][n]存状态， L [i][j]的含义是str1前i项和str2的前j项最长的公共子序列的长度。&lt;br&gt;写出状态转移方程：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;L[i][j]=0                          if(i==0 || j==0)
L[i][j]=L[i-1][j-1]+1              if(str1[i]==str2[j])
L[i][j]=max⁡{L[i-1][j],L[i][j-1]}   if(str1[i]!=str2[j]))
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;第一个式子比较好理解，&lt;br&gt;第二个我是这么理解的,本应该是求:&lt;code&gt;max⁡{ L[i-1][j],L[i][j-1],L[i-1][j-1]}&lt;/code&gt;&lt;br&gt;可是很显然第三项是最小的，所以省略了。&lt;/p&gt;
&lt;p&gt;(2)输出一个LCS&lt;br&gt;从状态表右下角开始往前回溯，当前字符相等，则存入结果字符串，当前字符不相等，比较状态表上方与左方的值，并移动到最大值位置，重复上述步骤，直到到达边界。反序输出结果字符串。&lt;/p&gt;
&lt;p&gt;上代码：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;LCS&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;*a,&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;*b)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; m=&lt;span class=&quot;built_in&quot;&gt;strlen&lt;/span&gt;(a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n=&lt;span class=&quot;built_in&quot;&gt;strlen&lt;/span&gt;(b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; L[m][n];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i,j;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; res[&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; k=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;m;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(j=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;j&amp;lt;n;j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(i==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;||j==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                L[i][j]=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;      &lt;span class=&quot;comment&quot;&gt;//case 1     &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(a[i]==b[j])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    L[i][j]=L[i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;][j&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;//case 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    L[i][j]=L[i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;][j]&amp;gt;L[i][j&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]?L[i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;][j]:L[i][j&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]; &lt;span class=&quot;comment&quot;&gt;// case 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d &quot;&lt;/span&gt;,L[i][j]);    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=m&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,j=n&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;i&amp;gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;amp;&amp;amp;j&amp;gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(a[i]==b[j])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res[k++]=a[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            j--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(L[i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;][j]&amp;gt;L[i][j&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                i--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                j--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;\nLCS:&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;built_in&quot;&gt;strlen&lt;/span&gt;(res)&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;i&amp;gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%c&quot;&lt;/span&gt;,res[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return L[m&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;][n&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;];    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; str1[&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; str2[&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;strcpy&lt;/span&gt;(str1,&lt;span class=&quot;string&quot;&gt;&quot;SIMPLE&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;strcpy&lt;/span&gt;(str2,&lt;span class=&quot;string&quot;&gt;&quot;NAIVE&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ret;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ret=LCS(str1,str2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;length of LCS:%d\n&quot;&lt;/span&gt;,ret);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;最长公共子序列问题(longest common subsequence problem)描述的是：&lt;/p&gt;
&lt;p&gt;给你两个字符串str1和str2，它们之间可能存在公有子序列，子序列和子串的区别是：子序列不要求连续，只需要按照顺序出现就好，子串则要求连续：&lt;br&gt;例如：SIMPLE和NAIVE有共同的子序列IE，但是没有共同的子串。&lt;br&gt;      TOO SIMPLE和TOO YOUNG则有共同子串TOO&lt;/p&gt;
&lt;p&gt;LCS问题就是(1)求出最长公有子序列的长度(2)求出最长公有子序列。&lt;br&gt;
    
    </summary>
    
      <category term="algorithm" scheme="http://ShengtaoHou.github.io/categories/algorithm/"/>
    
      <category term="Dynamic programming" scheme="http://ShengtaoHou.github.io/categories/algorithm/Dynamic-programming/"/>
    
    
      <category term="algorithm" scheme="http://ShengtaoHou.github.io/tags/algorithm/"/>
    
      <category term="Dynamic programming" scheme="http://ShengtaoHou.github.io/tags/Dynamic-programming/"/>
    
  </entry>
  
  <entry>
    <title>最优二叉搜索树</title>
    <link href="http://ShengtaoHou.github.io/2016/12/15/%E6%9C%80%E4%BC%98%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/"/>
    <id>http://ShengtaoHou.github.io/2016/12/15/最优二叉搜索树/</id>
    <published>2016-12-15T04:17:48.000Z</published>
    <updated>2016-12-22T18:40:20.657Z</updated>
    
    <content type="html">&lt;p&gt;OBST问题：用二叉树来存数据，不同数据访问频率不一样，怎么样构建这颗二叉树，才可以使得访问代价最小。&lt;br&gt;直观的想法是把访问频率最高的放到树的根节点，树越矮越好，但是，很容易举出例子证明这种想法是错的，正确的做法是用动态规划。&lt;br&gt;先讲讲用到的变量，p[ n ]是n个节点的频率数组，e[ i ][ j ] 表示第 i 个节点到第 j 个节点构成的子树的最小搜索代价值，w[ i ][ j ]表示第 i 个节点到第 j 个节点的频率和。&lt;br&gt;一个事实：如果r是e[ i ][ j ]的根节点（i&amp;lt;=r&amp;lt;=j）那么：&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;e[ i ][ j ]=e[ i ][ r-1 ] + e[ r+1 ][ j ] +w[ i ][ j ]  ( i&amp;lt;=j )
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;定义边界：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;e[ i ][ j ]=0   ( j=i-1 )
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;动态转移方程：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;e[ i ][ j ]=min{ e[ i ][ r-1 ] + e[ r+1 ][ j ] +w[ i ][ j ] }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;用到了3层循环，第一层循环变量是子树的节点个数，第二层循环的变量是子树的起点位置，第三层循环的变量是子树的根节点位置，如此，我们可以得到任意区间OBST的搜索期望是多少。&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; INF 9999;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Optimal_BST&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; p[],&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i,j,l,r;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; root[n+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;][n+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; e[n+&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;][n+&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; w[n+&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;][n+&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;i&amp;lt;=n+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        e[i][i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        w[i][i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(l=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;l&amp;lt;=n;l++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;   i&amp;lt;=n-l+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;  i++)&amp;#123;  &lt;span class=&quot;comment&quot;&gt;// i,j between 1 and n+1，i是左边界，j是右边界 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            j=i+l&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e[i][j]=INF;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            w[i][j]=w[i][j&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]+p[j];     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(r=i;r&amp;lt;=j;r++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; temp=e[i][r&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]+e[r+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;][j]+w[i][j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(temp&amp;lt;e[i][j])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    e[i][j]=temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    root[i][j]=r;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;\n\ne table\n&quot;&lt;/span&gt;);    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;i&amp;lt;=n;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(j=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;j&amp;lt;=n;j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(i&amp;gt;j)&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;          &quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%f  &quot;&lt;/span&gt;,e[i][j]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;\n\nw table\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;i&amp;lt;=n;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(j=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;j&amp;lt;=n;j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(i&amp;gt;j)&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;          &quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%f  &quot;&lt;/span&gt;,w[i][j]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;\n\nroot table\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;i&amp;lt;=n;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(j=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;j&amp;lt;=n;j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(i&amp;gt;j)&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;  &quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d &quot;&lt;/span&gt;,root[i][j]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n=&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; p[&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;]=&amp;#123;&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0.25&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0.2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0.05&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0.2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0.3&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Optimal_BST(p,n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;OBST问题：用二叉树来存数据，不同数据访问频率不一样，怎么样构建这颗二叉树，才可以使得访问代价最小。&lt;br&gt;直观的想法是把访问频率最高的放到树的根节点，树越矮越好，但是，很容易举出例子证明这种想法是错的，正确的做法是用动态规划。&lt;br&gt;先讲讲用到的变量，p[ n ]是n个节点的频率数组，e[ i ][ j ] 表示第 i 个节点到第 j 个节点构成的子树的最小搜索代价值，w[ i ][ j ]表示第 i 个节点到第 j 个节点的频率和。&lt;br&gt;一个事实：如果r是e[ i ][ j ]的根节点（i&amp;lt;=r&amp;lt;=j）那么：
    
    </summary>
    
      <category term="algorithm" scheme="http://ShengtaoHou.github.io/categories/algorithm/"/>
    
      <category term="Dynamic programming" scheme="http://ShengtaoHou.github.io/categories/algorithm/Dynamic-programming/"/>
    
    
      <category term="algorithm" scheme="http://ShengtaoHou.github.io/tags/algorithm/"/>
    
      <category term="Dynamic programming" scheme="http://ShengtaoHou.github.io/tags/Dynamic-programming/"/>
    
  </entry>
  
  <entry>
    <title>图论基本算法</title>
    <link href="http://ShengtaoHou.github.io/2016/12/14/%E5%9B%BE%E8%AE%BA%E5%9F%BA%E6%9C%AC%E7%AE%97%E6%B3%95/"/>
    <id>http://ShengtaoHou.github.io/2016/12/14/图论基本算法/</id>
    <published>2016-12-14T04:54:13.000Z</published>
    <updated>2016-12-22T18:41:31.200Z</updated>
    
    <content type="html">&lt;p&gt;图论基本算法有BFS,DFS,拓扑排序&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;BFS&quot;&gt;&lt;a href=&quot;#BFS&quot; class=&quot;headerlink&quot; title=&quot;BFS&quot;&gt;&lt;/a&gt;BFS&lt;/h2&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; max 100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; INF 999&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; grap[max][max];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; d[max];&lt;span class=&quot;comment&quot;&gt;//discover time&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//define a simple queue with a max size max&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;[max]=&amp;#123;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; head=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; tail=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;enterqueue&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;[tail]=n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	tail=(tail+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)%max; &lt;span class=&quot;comment&quot;&gt;//when the node reach the end, it move to the front&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;dequeue&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ret=&lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;[head];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	head=(head+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)%max;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return ret; &lt;span class=&quot;comment&quot;&gt;//return the head value&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;is_empty&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(head==tail)return &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//we ingore the full case, since it is useless in this function &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;BFS(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; vetex_num,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; s)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i,j;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;vetex_num;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		d[i]=INF;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	d[s]=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//s is the start point&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	enterqueue(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(!is_empty())&amp;#123;   &lt;span class=&quot;comment&quot;&gt;//loop until queue finish&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; u=dequeue(); &lt;span class=&quot;comment&quot;&gt;//dequeue a vetex from the queue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;vetex_num;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(grap[u][i]!=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;amp;&amp;amp;d[i]==INF)&amp;#123;  &lt;span class=&quot;comment&quot;&gt;//i and j are adjacence meanwhile undiscovered&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				d[i]=d[u]+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//discover i , and set the discover time&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				enterqueue(i); &lt;span class=&quot;comment&quot;&gt;//enter all the adjacence vetex into the queue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;vetex %d visit vetex %d\n&quot;&lt;/span&gt;,u,i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; edge_num,vetex_num;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	FILE *fin  = fopen (&lt;span class=&quot;string&quot;&gt;&quot;graph.in&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;r&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FILE *fout = fopen (&lt;span class=&quot;string&quot;&gt;&quot;graph.out&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;w&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; buf[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fgets(buf,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,fin);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	edge_num=atoi(buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;edge_num:%d\n&quot;&lt;/span&gt;,edge_num);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fgets(buf,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,fin);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	vetex_num=atoi(buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;vetex_num:%d\n&quot;&lt;/span&gt;,vetex_num);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;edge_num;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; start,end,weight;&lt;span class=&quot;comment&quot;&gt;//start point,end point and the weight of edge&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fgets(buf,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,fin);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;sscanf&lt;/span&gt;(buf,&lt;span class=&quot;string&quot;&gt;&quot;%d %d %d&quot;&lt;/span&gt;,&amp;amp;start,&amp;amp;end,&amp;amp;weight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;start:%d end:%d weight:%d\n&quot;&lt;/span&gt;,start,end,weight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		grap[start][end]=grap[end][start]=weight;&lt;span class=&quot;comment&quot;&gt;//init the graph matrix no direct&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	BFS(vetex_num,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;//BFS search&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;vetex_num;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;d[%d],%d\n&quot;&lt;/span&gt;,i,d[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;DFS&quot;&gt;&lt;a href=&quot;#DFS&quot; class=&quot;headerlink&quot; title=&quot;DFS&quot;&gt;&lt;/a&gt;DFS&lt;/h2&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; max 100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; INF 999&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; grap[max][max];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; d[max];&lt;span class=&quot;comment&quot;&gt;//discover time&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; f[max];&lt;span class=&quot;comment&quot;&gt;//finish time&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; color[max];&lt;span class=&quot;comment&quot;&gt;//DFS mark,0 white,1 gray,2 black&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; time=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DFS_Visit(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; u,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; vetex_num)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	color[u]=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//visit the vetex u,mark its color&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	time++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	d[u]=time;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//recursive DFS, visit adjacence unvisited vetex&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//and then visit adjacence unvisited vetex&#39;s adjacence unvisited vetex&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//until there are no white vetex&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;vetex_num;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(grap[u][i]!=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;amp;&amp;amp;color[i]==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			DFS_Visit(i,vetex_num);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	color[u]=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//then turn the current vetex into black&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	time++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	f[u]=time;&lt;span class=&quot;comment&quot;&gt;//turn black and finsish, never visit it again&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DFS(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; vetex_num)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;vetex_num;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		color[i]=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;       &lt;span class=&quot;comment&quot;&gt;//init the color,all white&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;vetex_num;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(color[i]==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			DFS_Visit(i,vetex_num);&lt;span class=&quot;comment&quot;&gt;//DFS visit all the vetex&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; edge_num,vetex_num;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	FILE *fin  = fopen (&lt;span class=&quot;string&quot;&gt;&quot;graph.in&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;r&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FILE *fout = fopen (&lt;span class=&quot;string&quot;&gt;&quot;graph.out&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;w&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; buf[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fgets(buf,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,fin);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	edge_num=atoi(buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;edge_num:%d\n&quot;&lt;/span&gt;,edge_num);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fgets(buf,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,fin);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	vetex_num=atoi(buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;vetex_num:%d\n&quot;&lt;/span&gt;,vetex_num);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;edge_num;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; start,end,weight;&lt;span class=&quot;comment&quot;&gt;//start point,end point and the weight of edge&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fgets(buf,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,fin);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;sscanf&lt;/span&gt;(buf,&lt;span class=&quot;string&quot;&gt;&quot;%d %d %d&quot;&lt;/span&gt;,&amp;amp;start,&amp;amp;end,&amp;amp;weight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;start:%d end:%d weight:%d\n&quot;&lt;/span&gt;,start,end,weight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		grap[start][end]=grap[end][start]=weight;&lt;span class=&quot;comment&quot;&gt;//init the graph matrix no direct&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	DFS(vetex_num);        &lt;span class=&quot;comment&quot;&gt;//DFS search&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;vetex_num;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;d[%d]:%d; f[%d]:%d\n&quot;&lt;/span&gt;,i,d[i],i,f[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;拓扑排序&quot;&gt;&lt;a href=&quot;#拓扑排序&quot; class=&quot;headerlink&quot; title=&quot;拓扑排序&quot;&gt;&lt;/a&gt;拓扑排序&lt;/h2&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this is a c code contain DFS,BFS,topologicalsort,SCC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;copyright:Rookie Hou&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;data:2016/12/7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; max 100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; INF 999&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; grap[max][max];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; d[max];&lt;span class=&quot;comment&quot;&gt;//discover time&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; f[max];&lt;span class=&quot;comment&quot;&gt;//finish time&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; color[max];&lt;span class=&quot;comment&quot;&gt;//DFS mark,0 white,1 gray,2 black&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; time=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; top[max];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DFS_Visit(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; u,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; vetex_num)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	color[u]=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//visit the vetex u,mark its color&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	time++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	d[u]=time;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//recursive DFS, visit adjacence unvisited vetex&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//and then visit adjacence unvisited vetex&#39;s adjacence unvisited vetex&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//until there are no white vetex&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;vetex_num;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(grap[u][i]!=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;amp;&amp;amp;color[i]==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			DFS_Visit(i,vetex_num);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	color[u]=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//then turn the current vetex into black&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	time++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	f[u]=time;&lt;span class=&quot;comment&quot;&gt;//turn black and finsish, never visit it again&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DFS(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; edgenum,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; vetex_num)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;vetex_num;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		color[i]=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;       &lt;span class=&quot;comment&quot;&gt;//init the color,all white&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;vetex_num;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(color[i]==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			DFS_Visit(i,vetex_num);&lt;span class=&quot;comment&quot;&gt;//DFS visit all the vetex&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;topological(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; vetex_num)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i,j;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;vetex_num;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		top[i]=f[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;i&amp;lt;vetex_num;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		j=i&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x=top[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(j&amp;gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;amp;&amp;amp;top[j]&amp;lt;x)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			top[j+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]=top[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			j--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		top[j+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]=x;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; edge_num,vetex_num;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	FILE *fin  = fopen (&lt;span class=&quot;string&quot;&gt;&quot;graph.in&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;r&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FILE *fout = fopen (&lt;span class=&quot;string&quot;&gt;&quot;graph.out&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;w&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; buf[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fgets(buf,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,fin);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	edge_num=atoi(buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;edge_num:%d\n&quot;&lt;/span&gt;,edge_num);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fgets(buf,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,fin);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	vetex_num=atoi(buf);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;vetex_num:%d\n&quot;&lt;/span&gt;,vetex_num);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;edge_num;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; start,end,weight;&lt;span class=&quot;comment&quot;&gt;//start point,end point and the weight of edge&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fgets(buf,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,fin);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;sscanf&lt;/span&gt;(buf,&lt;span class=&quot;string&quot;&gt;&quot;%d %d %d&quot;&lt;/span&gt;,&amp;amp;start,&amp;amp;end,&amp;amp;weight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;start:%d end:%d weight:%d\n&quot;&lt;/span&gt;,start,end,weight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		grap[start][end]=grap[end][start]=weight;&lt;span class=&quot;comment&quot;&gt;//init the graph matrix no direct&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//BFS(vetex_num,0); //BFS search&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	DFS(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);        &lt;span class=&quot;comment&quot;&gt;//DFS search&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//output the topoplogicalsort result, and the discover time plus finish time&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//we can see that finish time is decrease?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	topological(vetex_num);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;vetex_num;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;top[%d]:%d ;discover time:%d finish time:%d\n&quot;&lt;/span&gt;,i,top[i],d[i],f[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;图论基本算法有BFS,DFS,拓扑排序&lt;br&gt;
    
    </summary>
    
      <category term="algorithm" scheme="http://ShengtaoHou.github.io/categories/algorithm/"/>
    
      <category term="graph theory" scheme="http://ShengtaoHou.github.io/categories/algorithm/graph-theory/"/>
    
    
      <category term="algorithm" scheme="http://ShengtaoHou.github.io/tags/algorithm/"/>
    
      <category term="graph theory" scheme="http://ShengtaoHou.github.io/tags/graph-theory/"/>
    
  </entry>
  
  <entry>
    <title>Markdown常用语法归纳</title>
    <link href="http://ShengtaoHou.github.io/2016/04/09/Markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95%E5%BD%92%E7%BA%B3/"/>
    <id>http://ShengtaoHou.github.io/2016/04/09/Markdown常用语法归纳/</id>
    <published>2016-04-09T14:59:49.000Z</published>
    <updated>2016-12-15T13:04:50.398Z</updated>
    
    <content type="html">&lt;h2 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h2&gt;&lt;p&gt;标题的前加#，#越多字体越小，级数越小，会反映到目录中去例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#1级标题
##2级标题
###3级标题
&lt;/code&gt;&lt;/pre&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;列表写法&quot;&gt;&lt;a href=&quot;#列表写法&quot; class=&quot;headerlink&quot; title=&quot;列表写法&quot;&gt;&lt;/a&gt;列表写法&lt;/h2&gt;&lt;p&gt;无序列表可以用*也可以用-号，注意空格&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- 这是无序列表
    - 这是无序列表 
    - 这是无序列表
- 这是无序列表
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;效果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这是无序列表&lt;ul&gt;
&lt;li&gt;这是无序列表 &lt;/li&gt;
&lt;li&gt;这是无序列表&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;这是无序列表&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;1. 有序列表
2. 有序列表
3. 有序列表
&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;
&lt;li&gt;有序列表&lt;/li&gt;
&lt;li&gt;有序列表&lt;/li&gt;
&lt;li&gt;有序列表&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;文字块&quot;&gt;&lt;a href=&quot;#文字块&quot; class=&quot;headerlink&quot; title=&quot;文字块&quot;&gt;&lt;/a&gt;文字块&lt;/h2&gt;&lt;p&gt;缩进并且前后换行就能产生文字块：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;这是一个文字块
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;文字样式&quot;&gt;&lt;a href=&quot;#文字样式&quot; class=&quot;headerlink&quot; title=&quot;文字样式&quot;&gt;&lt;/a&gt;文字样式&lt;/h2&gt;&lt;p&gt;被两个乘号包裹的内容会显示粗体，&lt;strong&gt;shenhuniurou&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;被一个乘号包裹的内容会显示斜体，&lt;em&gt;shenhuniurou&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;使用tab键上面的那个字符，被这个字符包裹的内容会有一个阴影&lt;code&gt;这是一个有阴影的文字&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用2个~，效果是这样的&lt;del&gt;删除线&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&quot;代码块&quot;&gt;&lt;a href=&quot;#代码块&quot; class=&quot;headerlink&quot; title=&quot;代码块&quot;&gt;&lt;/a&gt;代码块&lt;/h2&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意，3个`和语言之间必须有空格。&lt;/p&gt;
&lt;h2 id=&quot;引用&quot;&gt;&lt;a href=&quot;#引用&quot; class=&quot;headerlink&quot; title=&quot;引用&quot;&gt;&lt;/a&gt;引用&lt;/h2&gt;&lt;p&gt;前面加&amp;gt;表示引用&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这是一段引用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;headerlink&quot; title=&quot;链接&quot;&gt;&lt;/a&gt;链接&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;[baidu](www.baidu.com)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;www.baidu.com&quot;&gt;baidu&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;图片&quot;&gt;&lt;a href=&quot;#图片&quot; class=&quot;headerlink&quot; title=&quot;图片&quot;&gt;&lt;/a&gt;图片&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;![](http://ww4.sinaimg.cn/bmiddle/aa397b7fjw1dzplsgpdw5j.jpg)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/bmiddle/aa397b7fjw1dzplsgpdw5j.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;本地图片：&lt;br&gt;获取根目录images文件夹下的图片：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;![](/images/1.png)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&quot;/images/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;字体&quot;&gt;&lt;a href=&quot;#字体&quot; class=&quot;headerlink&quot; title=&quot;字体&quot;&gt;&lt;/a&gt;字体&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;*斜体*，**粗体**
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;斜体&lt;/em&gt;，&lt;strong&gt;粗体&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;分隔线&quot;&gt;&lt;a href=&quot;#分隔线&quot; class=&quot;headerlink&quot; title=&quot;分隔线&quot;&gt;&lt;/a&gt;分隔线&lt;/h2&gt;&lt;p&gt;可以在一行中用三个以上的减号来建立一个分隔线，行内不能有其他东西，注意换行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---

---

---
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;效果：&lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;h2 id=&quot;列表&quot;&gt;&lt;a href=&quot;#列表&quot; class=&quot;headerlink&quot; title=&quot;列表&quot;&gt;&lt;/a&gt;列表&lt;/h2&gt;&lt;p&gt;列表写法如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;| Tables        | Are           | Cool  |
| ------------- |:-------------:| -----:|
| col 3 is      | right-aligned | $1600 |
| col 2 is      | centered      |   $12 |
| zebra stripes | are neat      |    $1 |
&lt;/code&gt;&lt;/pre&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tables&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Are&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;Cool&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;col 3 is&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;right-aligned&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$1600&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;col 2 is&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;centered&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zebra stripes&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;are neat&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;markdown在线编辑器&quot;&gt;&lt;a href=&quot;#markdown在线编辑器&quot; class=&quot;headerlink&quot; title=&quot;markdown在线编辑器&quot;&gt;&lt;/a&gt;markdown在线编辑器&lt;/h2&gt;&lt;p&gt;最后附上markdown在线编辑器，每次要写文章之前先在这上面实验一下&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://mahua.jser.me/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;markdown在线编辑器&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h2&gt;&lt;p&gt;标题的前加#，#越多字体越小，级数越小，会反映到目录中去例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#1级标题
##2级标题
###3级标题
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="markdown" scheme="http://ShengtaoHou.github.io/categories/markdown/"/>
    
    
      <category term="markdown" scheme="http://ShengtaoHou.github.io/tags/markdown/"/>
    
  </entry>
  
</feed>
